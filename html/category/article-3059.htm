<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-3059.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>Spring ResolvableType满足你对Java泛型的任何操作和幻想 - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">Spring ResolvableType满足你对Java泛型的任何操作和幻想</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="markdown_views prism-atelier-sulphurpool-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li></li> <li>背景</li> <li>ResolvableType 的使用</li> <li> <ul> <li>获取父类的泛型</li> <li>获取接口上的泛型</li> <li>获取属性上的泛型</li> <li> <ul> <li>获取属性对象的泛型</li> <li>获取属性List上的泛型</li> <li>获取属性List嵌套List的泛型</li> <li>获取属性Map上的泛型</li> </ul> </li> <li>获取方法返回值的泛型</li> <li>获取构造方法参数的泛型</li> </ul> </li> <li>参考</li> </ul> </li> </ul> </div> <blockquote> <p>这里是weihubeats,觉得文章不错可以关注公众号<strong>小奏技术</strong>，文章首发。拒绝营销号，拒绝标题党</p> </blockquote> <h2></h2> <h2> 背景</h2> <p>我们是否经常在写一些工具类或者SDK的时候需要获取类上面的泛型<br /> 比如父类的泛型,这样的</p> <pre><code class="prism language-java">	<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span>      <span class="token punctuation">}</span>      <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span>      <span class="token punctuation">}</span> </code></pre> <p>比如接口上的泛型</p> <pre><code class="prism language-java">	<span class="token keyword">interface</span> <span class="token class-name">StudentServiceImpl</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span>      <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">StudentService</span> <span class="token keyword">implements</span> <span class="token class-name">StudentServiceImpl</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Student</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span> </code></pre> <p>等等一系列需要获取泛型的操作，但是Java的原生SDK还是比较难用和冗余的，所以Spring在<br /> 此背景下又扩展了Java 反射对泛型的操作，及<code>ResolvableType</code>类。下面我们一起来学习下吧</p> <h2> ResolvableType 的使用</h2> <h3> 获取父类的泛型</h3> <pre><code class="prism language-java">	<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>     <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> </code></pre> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">	<span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getPersonGenericBySpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span> <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forClass</span><span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getSuperType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>运行结果</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230203/613d020790b4bcd6307ac01a1e2d44cf.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"></p> <h3> 获取接口上的泛型</h3> <pre><code class="prism language-java">	<span class="token keyword">interface</span> <span class="token class-name">StudentServiceImpl</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span> <span class="token punctuation">}</span>     <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">StudentService</span> <span class="token keyword">implements</span> <span class="token class-name">StudentServiceImpl</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Student</span><span class="token punctuation">></span></span> <span class="token punctuation">{<!-- --></span> <span class="token punctuation">}</span> </code></pre> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getInterfaceBySpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span> <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forClass</span><span class="token punctuation">(</span><span class="token class-name">StudentService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> anInterface <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> anInterface<span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>运行结果</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230203/2c5945eff9ba6bc335265f5caa59967d.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"></p> <h3> 获取属性上的泛型</h3> <p>测试类</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span>     <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">GenericClass</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">></span></span> listString<span class="token punctuation">;</span>          <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">List</span><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">></span></span> listLists<span class="token punctuation">;</span>          <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">></span></span> maps<span class="token punctuation">;</span>          <span class="token keyword">private</span> <span class="token class-name">Person</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span></span> person<span class="token punctuation">;</span>          <span class="token keyword">private</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>          <span class="token keyword">public</span> <span class="token class-name">GenericClass</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">List</span><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">></span></span> list<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation"><</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">></span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <h4> 获取属性对象的泛型</h4> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getPropertyGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span> <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forField</span><span class="token punctuation">(</span><span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span><span class="token class-name">GenericClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"person"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>运行结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230203/12563bbe5573711c894f3b32774fe3b0.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"> </li> </ul> <h4> 获取属性List上的泛型</h4> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getPropertyListsGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span> <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forField</span><span class="token punctuation">(</span><span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span><span class="token class-name">GenericClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"listString"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>获取结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230203/26d34fdd9f185d06c955f669547fc971.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"> </li> </ul> <h4> 获取属性List嵌套List的泛型</h4> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getPropertyListAndListGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span> <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forField</span><span class="token punctuation">(</span><span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span><span class="token class-name">GenericClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"listLists"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">ResolvableType</span> generic1 <span class="token operator">=</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGeneric</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 第一层</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一层泛型: "</span> <span class="token operator">+</span> generic1<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 第二层</span>         <span class="token class-name">ResolvableType</span> generic <span class="token operator">=</span> generic1<span class="token punctuation">.</span><span class="token function">getGeneric</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二层泛型: "</span> <span class="token operator">+</span> generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation"><</span><span class="token operator">?</span><span class="token punctuation">></span></span> resolve <span class="token operator">=</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGeneric</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 也可以使用如下方式获取</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第二层泛型: "</span> <span class="token operator">+</span> resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230203/9fea92063bb3a842e2332d02cc81cf3d.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"> </li> </ul> <h4> 获取属性Map上的泛型</h4> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getPropertyMapGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span> <span class="token class-name">ResolvableType</span>                 <span class="token punctuation">.</span><span class="token function">forField</span><span class="token punctuation">(</span><span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">findField</span><span class="token punctuation">(</span><span class="token class-name">GenericClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"maps"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>获取结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230203/280069a6217c896a453a15b32450d3cb.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"> </li> </ul> <h3> 获取方法返回值的泛型</h3> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getMethodGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span>                 <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forMethodReturnType</span><span class="token punctuation">(</span><span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">findMethod</span><span class="token punctuation">(</span><span class="token class-name">GenericClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"method"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 第一层</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Map中的泛型: "</span> <span class="token operator">+</span> generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token comment">// 获取第二层的</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Map中List的泛型: "</span> <span class="token operator">+</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGeneric</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> </code></pre> <ul> <li>获取结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230203/dd962e71f18c7983cf70af56ebd283b3.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"> </li> </ul> <h3> 获取构造方法参数的泛型</h3> <ul> <li>获取方式</li> </ul> <pre><code class="prism language-java">    <span class="token annotation punctuation">@Test</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getConstructorGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ResolvableType</span> resolvableType <span class="token operator">=</span>                 <span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forConstructorParameter</span><span class="token punctuation">(</span><span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">getConstructorIfAvailable</span><span class="token punctuation">(</span><span class="token class-name">GenericClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> generic <span class="token operator">:</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"构造方法参数泛型: "</span> <span class="token operator">+</span> generic<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Map中的泛型: "</span> <span class="token operator">+</span> resolvableType<span class="token punctuation">.</span><span class="token function">getGeneric</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> <ul> <li>获取结果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230203/65038fc64e9b9fe64dfcae4551cbe6d5.jpg" alt="Spring ResolvableType满足你对Java泛型的任何操作和幻想"> </li> </ul> <h2> 参考</h2> <p>博客</p> </p></div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-3058.htm">在边缘计算场景中使用Dapr</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-3060.htm">TENSORFLOW：TENSORS</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7324.htm" title="宠物粮加工厂原料有哪些呢 宠物粮加工厂原料有哪些呢图片">宠物粮加工厂原料有哪些呢 宠物粮加工厂原料有哪些呢图片</a></li>
                        <li class="py-2"><a href="/html/category/article-7922.htm" title="动物打的疫苗 动物打的疫苗是什么">动物打的疫苗 动物打的疫苗是什么</a></li>
                        <li class="py-2"><a href="/html/category/article-7831.htm" title="猫咪3针疫苗间隔多久打第二针好一点（猫的疫苗三针隔多久）">猫咪3针疫苗间隔多久打第二针好一点（猫的疫苗三针隔多久）</a></li>
                        <li class="py-2"><a href="/html/category/article-7738.htm" title="一片片枫叶飘落下来像什么（一片片枫叶飘落好像）">一片片枫叶飘落下来像什么（一片片枫叶飘落好像）</a></li>
                        <li class="py-2"><a href="/html/category/article-7141.htm" title="阿博（博阿斯胡尔克）">阿博（博阿斯胡尔克）</a></li>
                        <li class="py-2"><a href="/html/category/article-6911.htm" title="无货源网店好干吗（无货源网店挣钱吗）">无货源网店好干吗（无货源网店挣钱吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6588.htm" title="宠物粮食加工厂设备生产厂家有哪些品牌的（宠物粮食加工厂设备生产厂家有哪些品牌的）">宠物粮食加工厂设备生产厂家有哪些品牌的（宠物粮食加工厂设备生产厂家有哪些品牌的）</a></li>
                        <li class="py-2"><a href="/html/category/article-7002.htm" title="动物疫苗使用方法视频（动物疫苗使用方法视频教程）">动物疫苗使用方法视频（动物疫苗使用方法视频教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-7877.htm" title="开一家小的宠物店需要多少钱（开一家宠物店需要投资多少）">开一家小的宠物店需要多少钱（开一家宠物店需要投资多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-7830.htm" title="太原免费领养宠物 太原免费领养宠物的地方">太原免费领养宠物 太原免费领养宠物的地方</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>