<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-3107.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>Netty之非阻塞处理 - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">Netty之非阻塞处理</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<p><code>Netty</code> 是一个异步的、基于事件驱动的网络应用框架，用以快速开发高性能、高可靠性的网络<code>IO</code> 程序。</p> <h1 id="一异步模型">一、异步模型</h1> <p>同步I/O : 需要进程去真正的去操作I/O；</p> <p>异步I/O：内核在I/O操作完成后再通知应用进程操作结果。</p> <p><strong>怎么去理解同步和异步？</strong></p> <ul> <li><code>同步：</code>比如服务端发送数据给客户端，客户端中的处理器（继承一个<code>入站处理器</code>即可），可以去重写<code>channelRead0</code> 方法，那么该方法触发的时候，其实必须得服务器有消息发过来，客户端才能去读写，两者必须是有<code>先后</code>顺序，这就是所谓的<code>同步</code>。</li> <li>异步：客户端在服务端发送数据来之前就已经返回数据给了用户，但客户端已经告诉服务端数据到了要通过订阅的方式（大名鼎鼎的<code>观察者模式</code>）,文章最后已经附上传送门，理解设计模式</li> </ul> <p>比如上一篇关于<code>Netty</code>的<code>AttributeKey</code>和<code>AttributeMap</code>的原理和使用，这里不妨讲讲它的缺点</p> <h1 id="二异步模型存在的问题">二、异步模型存在的问题</h1> <p><strong>使用流程</strong></p> <blockquote> <p>Step1 使用 AttributeKey 设置 key 值和 k-v 对，为 channel 获取 值做准备</p> </blockquote> <p>创建一个处理器<code>NettyClientHandler</code> 继承<code>SimpleChannelInboundHandler&lt;RpcResponse&gt;</code>,它已经实现了 入站处理器相关的功能，只要重写它的<code>channelRead0</code> 方法即可</p> <pre><code class="language-java">public class NettyClientHandler extends SimpleChannelInboundHandler&lt;RpcResponse&gt; { @Override protected void channelRead0(ChannelHandlerContext ctx, RpcResponse msg) throws Exception { try { AttributeKey&lt;RpcResponse&gt; key = AttributeKey.valueOf(msg.getRequestId()); ctx.channel().attr(key).set(msg); ctx.channel().close(); } finally { ReferenceCountUtil.release(msg); } } }</code></pre> <p>记得将该 处理器 加入到 客户端<code>bootStrap</code> 的<code>handler()</code>方法中，需要 通过默认的 初始化器<code>new ChannelInitializer&lt;SocketChannel&gt;()</code>（也是一个处理器）去初始化处理器链，我是通过匿名内部类去重写<code>initChannel</code> 方法的，最后<code>addLast()</code> 刚刚自己写的处理器即可。</p> <p>创建服务器和客户端，这里不再赘述，这篇文章对刚入门的帮助不大，可到文章最后取经拿服务端和客户端。</p> <blockquote> <p>Step2 使用 channel 的 attr 方法，获取 k-v 值</p> </blockquote> <p>客户端这里<code>NettyClient</code> 通过用户调用<code>sendRequest()</code> 方法，去向服务端发送信息，返回值是服务端发回的消息，我们都知道，信息都是在处理器获取的，也就是在<code>channelRead0</code>方法中，所以我们要在<code>sendRequest()</code>方法中，获取服务端传来的值，通过下面代码获取</p> <pre><code class="language-java">@Override public Object sendRequest(RpcRequest rpcRequest) throws RpcException { // 通过 host 和 port 获取 channel //省略 // 写入 channel 让 服务端 去 读 request channel.writeAndFlush(rpcRequest); // 获取 k-v 对 RpcResponse rpcResponse = channel.attr(key).get(); }</code></pre> <p>相信你们当中有一部分发觉了异样，<code>sendRequest()</code>方法和<code>channelRead0()</code>不会同步，就是说你发送数据后，会立马执行到 获取<code>k-v</code> 的代码，不能<code>阻塞</code>住等待<code>channelRead0()</code>方法把<code>k-v</code> 值<code>set</code> 进去</p> <p>最后测试到，客户端拿不到值，总是为<code>null</code></p> <p><strong>那怎么保持使用异步操作，并且可以顺利拿到值呢？</strong></p> <p>那么就得通过<code>future</code>来实现，就是先返回值，但值还是没有的，后面让用户自己用<code>future</code>的方法<code>get</code>阻塞拿值，说白了，还是要去同步，只是同步由<code>CPU</code>转到了<code>用户</code>自己手中，慢慢品</p> <h1 id="三使用completablefuture-解决异步问题">三、使用CompletableFuture 解决异步问题</h1> <p><code>CompletableFuture</code> 使用方法</p> <pre><code class="language-java">CompletableFuture&lt;RpcResponse&gt; resultFuture = new CompletableFuture&lt;&gt;(); /**complete 执行结束后，状态发生改变，则 说明 值已经传到了，complete 是 (被观察者） 通知类的通知方法，通知 观察者 ，get 方法将 不再阻塞，可以获取到值 */ resultFuture .complete(msg); /**获取 正确结果，get 是阻塞操作，所以 先把 resultFuture 作为 返回值 返回，再 get 获取值 */ RpcResponse rpcResponse = resultFuture.get(); // 获取 错误结果， 抛 异常 处理 resultFuture.completeExceptionally(future.cause());</code></pre> <p>所以我们要做的就是在<code>channelRead0()</code>中 做<code>complete()</code>，最后 用户直接<code>get</code>得到数据即可，只要把<code>sendRequest()</code>方法的返回类型改为<code>CompletableFuture</code> 就可以了。</p> <p>简单来说就是通过使用这个<code>CompletableFuture</code>,让<code>response</code>不至于返回后是null，因为我们自己<code>new</code>了一个<code>CompletableFuture</code>类，这个类会被通知，并把结果告知给它</p> <p>需要注意的是，在 客户端的<code>sendRequest()</code>方法拿到的<code>CompletableFuture&lt;RpcResponse&gt;</code> 和在<code>channelRead0()</code>拿到的必须为同一个，可以设计成<code>单例模式</code>，这里是很泛化的单例，通用</p> <pre><code class="language-java">public class SingleFactory {  private static Map&lt;Class, Object&gt; objectMap = new HashMap&lt;&gt;();  private SingleFactory() {}  /** * 使用 双重 校验锁 实现 单例模式 * @param clazz * @param &lt;T&gt; * @return */ public static &lt;T&gt; T getInstance(Class&lt;T&gt; clazz) { Object instance = objectMap.get(clazz); if (instance == null) { synchronized (clazz) { if (instance == null) { try { instance = clazz.newInstance(); } catch (InstantiationException | IllegalAccessException e) { throw new RuntimeException(e.getMessage(), e); } } } } return clazz.cast(instance); }  }</code></pre> <p>下面这样实现是因为涉及到多个客户端并发访问同一个服务器，设计的原因如下：</p> <ul> <li>如果是同一个客户端要采用发起多个线程去请求服务端，设计时如果多个线程的<code>rpcRequest</code>请求<code>id</code>一样，那么要考虑线程安全</li> <li>如果是不同客户端发起请求服务端，又要保证线程之间对<code>CompleteFuture</code>是线程安全的，确保性能，不能用让所有线程共享同一个<code>CompleteFuture</code>，这样通知会变为不定向，不可用，因此考虑使用<code>map</code>暂时缓存所有<code>CompleteFuture</code>，更加高效</li> </ul> <pre><code class="language-java">public class UnprocessedRequests {  /** * k - request id * v - 可将来获取 的 response */ private static ConcurrentMap&lt;String, CompletableFuture&lt;RpcResponse&gt;&gt; unprocessedResponseFutures = new ConcurrentHashMap&lt;&gt;();  /** * @param requestId 请求体的 requestId 字段 * @param future 经过 CompletableFuture 包装过的 响应体 */ public void put(String requestId, CompletableFuture&lt;RpcResponse&gt; future) { System.out.println("put" + future); unprocessedResponseFutures.put(requestId, future); }  /** * 移除 CompletableFuture&lt;RpcResponse&gt; * @param requestId 请求体的 requestId 字段 */ public void remove(String requestId) { unprocessedResponseFutures.remove(requestId); }  public void complete(RpcResponse rpcResponse) { CompletableFuture&lt;RpcResponse&gt; completableFuture = unprocessedResponseFutures.remove(rpcResponse.getRequestId()); completableFuture.complete(rpcResponse); System.out.println("remove" + completableFuture); } }</code></pre> <p></p> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-3106.htm">我们如何使用单个MySQL UPDATE语句更新多行上的列值？</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-3108.htm">【远程文件浏览器】Unity+Lua开发调试利器</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3088.htm" title="JavaScript秒表开始、暂停、继续、重置功能的实现及连击的优化">JavaScript秒表开始、暂停、继续、重置功能的实现及连击的优化</a></li>
                        <li class="py-2"><a href="/html/category/article-3749.htm" title="Python用re模块实现简易tokenizer_在线工具">Python用re模块实现简易tokenizer_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3118.htm" title="Internet Explorer无法为 <m​​ain>元素呈现任何类型的背景颜色。">Internet Explorer无法为 <m​​ain>元素呈现任何类型的背景颜色。</a></li>
                        <li class="py-2"><a href="/html/category/article-3084.htm" title="审视Scrum Master的检查清单">审视Scrum Master的检查清单</a></li>
                        <li class="py-2"><a href="/html/category/article-3096.htm" title="win11系统如何修改日期格式">win11系统如何修改日期格式</a></li>
                        <li class="py-2"><a href="/html/category/article-3110.htm" title="Vue刷新页面数据持久化">Vue刷新页面数据持久化</a></li>
                        <li class="py-2"><a href="/html/category/article-3093.htm" title="Android 自定义方形验证码输入框，仿滴滴、小篮单车">Android 自定义方形验证码输入框，仿滴滴、小篮单车</a></li>
                        <li class="py-2"><a href="/html/category/article-3104.htm" title="Java详细讲解不同版本的接口语法和抽象类与接口的区别_java">Java详细讲解不同版本的接口语法和抽象类与接口的区别_java</a></li>
                        <li class="py-2"><a href="/html/category/article-3102.htm" title="redis笔记补充 &#8211; wang03">redis笔记补充 &#8211; wang03</a></li>
                        <li class="py-2"><a href="/html/category/article-3119.htm" title="Cpp的异常处理Exception Handling-笔记">Cpp的异常处理Exception Handling-笔记</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>