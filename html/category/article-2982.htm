<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-2982.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>LocalDate、LocalDateTime、LocalTime方法的基本使用 - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">LocalDate、LocalDateTime、LocalTime方法的基本使用</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#_1" rel="nofollow">前言</a></li> <li><a href="#Localdate_8" rel="nofollow">Localdate创建方法</a></li> <li><a href="#_15" rel="nofollow">获取年月日星期几</a></li> <li><a href="#_29" rel="nofollow">进行加减日期</a></li> <li><a href="#Instant_56" rel="nofollow">Instant</a></li> <li> <ul> <li><a href="#Instant_58" rel="nofollow">Instant的创建方法</a></li> <li><a href="#_64" rel="nofollow">设置时区偏移量</a></li> <li><a href="#_69" rel="nofollow">获取秒数</a></li> <li><a href="#_73" rel="nofollow">获取毫秒数</a></li> </ul> </li> <li><a href="#LocalDateLocalTimeLocalDateTimeInstant_79" rel="nofollow">LocalDate,LocalTime,LocalDateTime,Instant类进行格式化</a></li> <li><a href="#LocalDate_115" rel="nofollow">LocalDate基本方法总结</a></li> <li><a href="#LocalDate__String__147" rel="nofollow">LocalDate 与 String 之间的转换</a></li> </ul> </div> <h1><a id="_1" rel="nofollow"></a>前言</h1> <ul> <li>Java中1.8之前有date类和calendar类。其中date类到了1.8大部分的方法被弃用了说明这些方法都有很大的缺陷，而且date类如果不格式化可读性十分差，所以就需要格式化，而格式化使用simpledateformat来进行操作线程不安全。而calendar类是一个共享变量，而且没有做线程不安全，当多个线程同时使用simpledateformat调用format方法时，多个线程会同时调用calendar.setTime方法，而导致的后果时time值一直被修改从而返回的格式化的时间是错误的。而且simpledateformat方法中format和parse方法都是线程不安全的。</li> <li>Java1.8之后出现了localdate，localdatetime，localtime这些类，而这些类使用了final来修饰，使得这些类是不可变的，一旦实例化，值就固定了，有点类似于String类，所以这些类都是线程安全的。<br /> localdate是针对于年月日的，localtime是针对于时分秒，localdatetime是针对于年月日时分秒。</li> </ul> <ol> <li>LocalDate是一个不可变的日期时间对象，表示日期，通常被视为年月日。</li> <li>LocalDate可具有不可预测的结果，应当避免。</li> <li>LocalDate用<mark>equals</mark> 方法进行比较。</li> </ol> <h1><a id="Localdate_8" rel="nofollow"></a>Localdate创建方法</h1> <pre><code class="prism language-java"><span class="token comment">//获取当前日期 年月日(2022-05-31)</span><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输入年月日设置时间</span><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span>month<span class="token punctuation">,</span>day<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h1><a id="_15" rel="nofollow"></a>获取年月日星期几</h1> <pre><code class="prism language-java"><span class="token comment">//获取年份</span><span class="token keyword">int</span> year<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> year<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>YEAR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注意getMonth方法返回的是Month类，可通过getValue方法获得一个long类型的值，然后可以强转为int类型进行使用</span><span class="token class-name">Month</span> month<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//MAY 对象</span><span class="token keyword">int</span> month1<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>MONTH_OF_YEAR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//5</span><span class="token keyword">int</span> day<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//31</span><span class="token keyword">int</span> day1<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注意getDayOfWeek方法返回的是DayOfWeek类，可通过getValue方法获得一个long类型的值，然后可以强转为int类型进行使用</span><span class="token class-name">DayOfWeek</span> dayOfWeek<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">getDayOfWeek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//TUESDAY</span><span class="token keyword">int</span> dayOfWeek1<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>DAY_OF_WEEK<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2</span></code></pre> <h1><a id="_29" rel="nofollow"></a>进行加减日期</h1> <pre><code class="prism language-java"><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//增加一年</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">plusYears</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token class-name">ChronoUnit</span><span class="token punctuation">.</span>YEARS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//减少一个月</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">minusMonths</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">minus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token class-name">ChronoUnit</span><span class="token punctuation">.</span>MONTHS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//减少一日</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">minusDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">minus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token class-name">ChronoUnit</span><span class="token punctuation">.</span>DAYS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过使用with方法进行修改</span><span class="token comment">//修改年为2020</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">withYear</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//修改为2020</span> localDate<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">ChronoField</span><span class="token punctuation">.</span>YEAR<span class="token punctuation">,</span><span class="token number">2020</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>LocalTime相类似就是把年月日换成时分秒就可以了<br /> 创建LocalDateTime可以使用LocalDateTime.of(locaDate,localTime),LocalDate.atTime(localTime),LocalTime.atDate(localDate)来进行创建<br /> LocalDateTime获取LocalDate和LocalTime的方法如下</p> <pre><code class="prism language-java"><span class="token comment">//获取LocalDate</span><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取LocalTime</span><span class="token class-name">LocalTime</span> localTime<span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toLocalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h1><a id="Instant_56" rel="nofollow"></a>Instant</h1> <p>Instant类是1.8之后新增的，与1.8之前的Date类有点相似</p> <h2><a id="Instant_58" rel="nofollow"></a>Instant的创建方法</h2> <pre><code class="prism language-java"><span class="token class-name">Instant</span> instant<span class="token operator">=</span><span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//l为1970年1月1日至所记录时间的的毫秒数</span><span class="token class-name">Instant</span> instant1<span class="token operator">=</span><span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">ofEpochMilli</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h2><a id="_64" rel="nofollow"></a>设置时区偏移量</h2> <pre><code class="prism language-java"><span class="token comment">// 按时区设置偏移量</span><span class="token class-name">OffsetDateTime</span> offsetDateTime<span class="token operator">=</span> instant<span class="token punctuation">.</span><span class="token function">atOffset</span><span class="token punctuation">(</span><span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">ofHours</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置偏移量为8</span></code></pre> <h2><a id="_69" rel="nofollow"></a>获取秒数</h2> <pre><code class="prism language-java"><span class="token keyword">long</span> currentSecond<span class="token operator">=</span> instant<span class="token punctuation">.</span><span class="token function">getEpochSecond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h2><a id="_73" rel="nofollow"></a>获取毫秒数</h2> <p>获取1970年1月1日至所记录时间的的毫秒数，类似于Date类中的getTime方法。</p> <pre><code class="prism language-java"><span class="token comment">//获取毫秒数</span><span class="token keyword">long</span> l<span class="token operator">=</span> instant<span class="token punctuation">.</span><span class="token function">toEpochMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h1><a id="LocalDateLocalTimeLocalDateTimeInstant_79" rel="nofollow"></a>LocalDate,LocalTime,LocalDateTime,Instant类进行格式化</h1> <p>对于LocalDate,LocalTime,LocalDateTime,Instant类进行格式化需要使用DateTimeFormatter类</p> <pre><code class="prism language-java"><span class="token comment">//String转换成日期类型</span><span class="token comment">//String类型转换成LocalDate类型</span><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"2019-12-07"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//String类型转换为LocalTime类型</span><span class="token class-name">LocalTime</span> localTime<span class="token operator">=</span><span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"17:26:00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//String类型转换为LocalDateTime类型</span><span class="token comment">//按照12小时计算</span><span class="token class-name">DateTimeFormatter</span> formatter<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//按照24小时计算</span><span class="token class-name">DateTimeFormatter</span> formatter<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"2019-12-07 07:43:53"</span><span class="token punctuation">,</span>formatter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//日期类型转换成String类型</span><span class="token comment">//localDate转换成String</span><span class="token class-name">LocalDate</span> localDate<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//按照yyyyMMdd样式进行更改</span><span class="token class-name">String</span> format<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>BASIC_ISO_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//按照yyyy-MM-dd样式进行更改</span><span class="token class-name">String</span> format<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>ISO_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//自定义样式进行更改</span><span class="token class-name">DateTimeFormatter</span> pattern<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy年MM月dd日"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> format<span class="token operator">=</span> localDate<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//LocalTime类型转换为String类型</span><span class="token comment">//按照xx:xx:xx.xx样式进行转换</span><span class="token class-name">LocalTime</span> localTime<span class="token operator">=</span><span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> format3<span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span>ISO_TIME<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//按照自定义样式进行转换</span><span class="token class-name">DateTimeFormatter</span> formatter<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> format4<span class="token operator">=</span> localTime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formatter<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//LocalDateTime类型转换为String类型</span><span class="token class-name">LocalDateTime</span> localDateTime<span class="token operator">=</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DateTimeFormatter</span> formatter2<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> format5<span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formatter2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h1><a id="LocalDate_115" rel="nofollow"></a>LocalDate基本方法总结</h1> <table> <thead> <tr> <th>方法</th> <th>返回类型</th> <th>介绍说明</th> </tr> </thead> <tbody> <tr> <td>getYear()</td> <td>int</td> <td>该日期的年份</td> </tr> <tr> <td>getMonth()</td> <td>Month</td> <td>该日期月份的对象</td> </tr> <tr> <td>getMonthValue()</td> <td>int</td> <td>该日期的月份</td> </tr> <tr> <td><mark>查询、直接修改年份日期等</mark></td> <td>——-——</td> <td>——————</td> </tr> <tr> <td>getDayOfWeek().getValue()</td> <td>int</td> <td>该日期是当前周的第几天</td> </tr> <tr> <td>getDayOfMonth()</td> <td>int</td> <td>该日期是当前月的第几天</td> </tr> <tr> <td>getDayOfYear()</td> <td>int</td> <td>该日期是当前年的第几天</td> </tr> <tr> <td>withYear(int year)</td> <td>LocalDate</td> <td>修改该日期的年份</td> </tr> <tr> <td>withMonth(int month)</td> <td>LocalDate</td> <td>修改该日期的月份</td> </tr> <tr> <td>withDayOfMonth(int dayOfMonth)</td> <td>LocalDate</td> <td>修改该日期在当月的天数</td> </tr> <tr> <td><mark>判断、比较</mark></td> <td>————</td> <td>——————</td> </tr> <tr> <td>isLeapYear()</td> <td>boolean</td> <td>判断是否是闰年</td> </tr> <tr> <td>lengthOfYear()</td> <td>int</td> <td>获取该年份是365还是366天</td> </tr> <tr> <td>lengthOfMonth()</td> <td>int</td> <td>当前月份有多少天</td> </tr> <tr> <td>compareTo(ChronoLocalDate other)</td> <td>int</td> <td>比较该日期与other日期的大小，返回正数，那么当前对象时间较晚(数字较大)</td> </tr> <tr> <td>isBefore(ChronoLocalDate other)</td> <td>boolean</td> <td>比较该日期是否比other日期早(true为早)</td> </tr> <tr> <td>isAfter(ChronoLocalDate other)</td> <td>boolean</td> <td>比较该日期是否比other日期晚(true为晚)</td> </tr> <tr> <td>isEqual(ChronoLocalDate other)</td> <td>boolean</td> <td>比较两个日期是否相等</td> </tr> <tr> <td><mark>在原有基础上增加年份等</mark></td> <td>————</td> <td>——————</td> </tr> <tr> <td>plusYears(long yearsToAdd)</td> <td>LocalDate</td> <td>当前日期增加指定的年数</td> </tr> <tr> <td>plusMonths(long monthsToAdd)</td> <td>LocalDate</td> <td>当前日期增加指定的月份</td> </tr> <tr> <td>plusWeeks(long weeksToAdd)</td> <td>LocalDate</td> <td>当前日期增加指定的周数</td> </tr> <tr> <td>plusDays(long daysToAdd)</td> <td>LocalDate</td> <td>当前日期增加指定的天数</td> </tr> <tr> <td><mark>在原有基础上减少年份等</mark></td> <td>————</td> <td>——————</td> </tr> <tr> <td>minusYears(long yearsToSubtract)</td> <td>LocalDate</td> <td>当前日期减少指定的年数</td> </tr> <tr> <td>minusMonths(long monthsToSubtract)</td> <td>LocalDate</td> <td>当前日期减少指定的月份</td> </tr> <tr> <td>minusWeeks(long weeksToSubtract)</td> <td>LocalDate</td> <td>当前日期减少指定的周数</td> </tr> <tr> <td>minusDays(long daysToSubtract)</td> <td>LocalDate</td> <td>当前日期减少指定的天数</td> </tr> </tbody> </table> <h1><a id="LocalDate__String__147" rel="nofollow"></a>LocalDate 与 String 之间的转换</h1> <pre><code class="prism language-java"><span class="token class-name">LocalDate</span> today<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DateTimeFormatter</span> fmt<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> dateStr<span class="token operator">=</span> today<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code class="prism language-java"><span class="token class-name">String</span> str<span class="token operator">=</span><span class="token string">"2019-03-03"</span><span class="token punctuation">;</span><span class="token comment">//指定转换格式</span><span class="token class-name">DateTimeFormatter</span> fmt<span class="token operator">=</span><span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//进行转换</span><span class="token class-name">LocalDate</span> date<span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> fmt<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-2981.htm">vue实现图形验证码</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-2983.htm">PHP $ _SERVER</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3093.htm" title="Android 自定义方形验证码输入框，仿滴滴、小篮单车">Android 自定义方形验证码输入框，仿滴滴、小篮单车</a></li>
                        <li class="py-2"><a href="/html/category/article-3097.htm" title="vue 动态样式绑定">vue 动态样式绑定</a></li>
                        <li class="py-2"><a href="/html/category/article-3444.htm" title="关于Android安装apk出现解析包异常问题情况总结">关于Android安装apk出现解析包异常问题情况总结</a></li>
                        <li class="py-2"><a href="/html/category/article-3119.htm" title="Cpp的异常处理Exception Handling-笔记">Cpp的异常处理Exception Handling-笔记</a></li>
                        <li class="py-2"><a href="/html/category/article-3084.htm" title="审视Scrum Master的检查清单">审视Scrum Master的检查清单</a></li>
                        <li class="py-2"><a href="/html/category/article-4088.htm" title="Amazing巧用 CSS 视差实现酷炫交互动效详解">Amazing巧用 CSS 视差实现酷炫交互动效详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4313.htm" title="猫怎么驱虫正确方法（猫怎样驱虫?）">猫怎么驱虫正确方法（猫怎样驱虫?）</a></li>
                        <li class="py-2"><a href="/html/category/article-3101.htm" title="Docker基础ONBUILD指令介绍">Docker基础ONBUILD指令介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-3080.htm" title="通过覆盖的HTML元素<div>传递鼠标单击">通过覆盖的HTML元素<div>传递鼠标单击</a></li>
                        <li class="py-2"><a href="/html/category/article-3100.htm" title="docker system全新命令集">docker system全新命令集</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>