<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-3036.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>java WebSocket客户端断线重连 | 实用代码框架 - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">java WebSocket客户端断线重连 | 实用代码框架</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="-toc" style="margin-left:0px;"> <p id="%E5%89%8D%E8%A8%80-toc" style="margin-left:0px;">前言</p> <p id="Maven%E4%BE%9D%E8%B5%96-toc" style="margin-left:0px;">Maven依赖</p> <p id="%E4%BB%A3%E7%A0%81-toc" style="margin-left:0px;">代码</p> <p id="%E6%80%BB%E7%BB%93-toc" style="margin-left:0px;">总结</p> <hr id="hr-toc"/> <h1 id="%E5%89%8D%E8%A8%80">前言</h1> <p>在工作中是否会遇到实用websocket客户端连接服务端的时候，<strong><span style="color:#fe2c24;">网络波动</span></strong>，<span style="color:#fe2c24;"><strong>服务端断连</strong></span>的情况。会导致客户端被动断开连接。为了解决这个问题，需要对被动断开连接的情况进行捕获，并重新创建连接。这篇文章主要是提供可以直接使用的断线重连websocket客户端代码。</p> <h1 id="Maven%E4%BE%9D%E8%B5%96">Maven依赖</h1> <pre><code class="language-XML">        <dependency>             <groupId>org.projectlombok</groupId>             <artifactId>lombok</artifactId>             <optional>true</optional>         </dependency>         <dependency>             <groupId>cn.hutool</groupId>             <artifactId>hutool-all</artifactId>             <version>5.5.2</version>         </dependency>         <dependency>             <groupId>org.java-websocket</groupId>             <artifactId>Java-WebSocket</artifactId>             <version>1.5.1</version>         </dependency></code></pre> <h1 id="%E4%BB%A3%E7%A0%81">代码</h1> <p>不废话，上代码。</p> <pre><code class="language-java">package ai.guiji.csdn.ws.client;  import cn.hutool.core.thread.ThreadUtil; import cn.hutool.core.util.StrUtil; import lombok.extern.slf4j.Slf4j; import org.java_websocket.WebSocket; import org.java_websocket.client.WebSocketClient; import org.java_websocket.framing.Framedata; import org.java_websocket.handshake.ServerHandshake;  import javax.net.ssl.*; import java.net.Socket; import java.net.URI; import java.nio.ByteBuffer; import java.security.cert.CertificateException; import java.security.cert.X509Certificate; import java.util.concurrent.TimeUnit; import java.util.concurrent.atomic.AtomicBoolean; import java.util.concurrent.atomic.AtomicInteger; import java.util.function.Consumer;  /** @Author huyi @Date 2021/10/15 20:03 @Description: 重连websocket客户端 */ @Slf4j public class ReConnectWebSocketClient {   /** 字符串消息回调 */   private Consumer<String> msgStr;   /** 字节流消息回调 */   private Consumer<ByteBuffer> msgByte;   /** 异常回调 */   private Consumer<Exception> error;   /** 连接标识 */   private String key;   /** ws服务端连接 */   private URI serverUri;   /** 尝试重连标识 */   private AtomicBoolean tryReconnect;   /** 需要ping标识 */   private AtomicBoolean needPing;   /** websocket连接实体 */   private WebSocketClient webSocketClient;   /** 重连次数 */   private AtomicInteger reConnectTimes;   /** 连接结束标识 */   private AtomicBoolean end;   /** 连接后初始发送报文，这里也可以不需要，如果服务端主动断开连接，重连后可以继续推送报文的话。 */   private String initReConnectReq;   /** 结束回调 */   private Consumer<String> endConsumer;    public ReConnectWebSocketClient(       URI serverUri,       String key,       Consumer<String> msgStr,       Consumer<ByteBuffer> msgByte,       Consumer<Exception> error) {     this.msgStr = msgStr;     this.msgByte = msgByte;     this.error = error;     this.key = key;     this.serverUri = serverUri;     this.tryReconnect = new AtomicBoolean(false);     this.needPing = new AtomicBoolean(true);     this.reConnectTimes = new AtomicInteger(0);     this.end = new AtomicBoolean(false);     this.endConsumer = this::close;     init();   }    /** 初始化连接 */   public void init() {     // 创建连接     createWebSocketClient();     // ping线程     circlePing();   }    private void needReconnect() throws Exception {     ThreadUtil.sleep(10, TimeUnit.SECONDS);     int cul = reConnectTimes.incrementAndGet();     if (cul > 3) {       close("real stop");       throw new Exception("服务端断连，3次重连均失败");     }     log.warn("[{}]第[{}]次断开重连", key, cul);     if (tryReconnect.get()) {       log.error("[{}]第[{}]次断开重连结果 -> 连接正在重连，本次重连请求放弃", key, cul);       needReconnect();       return;     }     try {       tryReconnect.set(true);        if (webSocketClient.isOpen()) {         log.warn("[{}]第[{}]次断开重连，关闭旧连接", key, cul);         webSocketClient.closeConnection(2, "reconnect stop");       }       webSocketClient = null;       createWebSocketClient();       connect();       if (!StrUtil.hasBlank(initReConnectReq)) {         send(initReConnectReq);       }     } catch (Exception exception) {       log.error("[{}]第[{}]次断开重连结果 -> 连接正在重连，重连异常:[{}]", key, cul, exception.getMessage());       needReconnect();     } finally {       tryReconnect.set(false);     }   }    private void createWebSocketClient() {     webSocketClient =         new WebSocketClient(serverUri) {           @Override           public void onOpen(ServerHandshake serverHandshake) {             log.info("[{}]ReConnectWebSocketClient [onOpen]连接成功{}", key, getRemoteSocketAddress());             tryReconnect.set(false);           }            @Override           public void onMessage(String text) {             log.info("[{}]ReConnectWebSocketClient [onMessage]接收到服务端数据：text={}", key, text);             msgStr.accept(text);           }            @Override           public void onMessage(ByteBuffer bytes) {             log.info("[{}]ReConnectWebSocketClient [onMessage]接收到服务端数据：bytes={}", key, bytes);             msgByte.accept(bytes);           }            @Override           public void onWebsocketPong(WebSocket conn, Framedata f) {             log.info(                 "[{}]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode={}",                 key,                 f.getOpcode());           }            @Override           public void onClose(int i, String s, boolean b) {             log.info("[{}]ReConnectWebSocketClient [onClose]关闭，s={}，b={}", key, s, b);             if (StrUtil.hasBlank(s) || s.contains("https")) {               if (end.get()) {                 return;               }               try {                 needReconnect();               } catch (Exception exception) {                 endConsumer.accept("reconnect error");                 error.accept(exception);               }             }           }            @Override           public void onError(Exception e) {             log.info("[{}]ReConnectWebSocketClient [onError]异常，e={}", key, e);             endConsumer.accept("error close");             error.accept(e);           }         };     if (serverUri.toString().contains("wss://")) {       trustAllHosts(webSocketClient);     }   }    public void circlePing() {     new Thread(             () -> {               while (needPing.get()) {                 if (webSocketClient.isOpen()) {                   webSocketClient.sendPing();                 }                 ThreadUtil.sleep(5, TimeUnit.SECONDS);               }               log.warn("[{}]Ping循环关闭", key);             })         .start();   }    /**    * 连接    *    * @throws Exception 异常    */   public void connect() throws Exception {     webSocketClient.connectBlocking(10, TimeUnit.SECONDS);   }    /**    * 发送    *    * @param msg 消息    * @throws Exception 异常    */   public void send(String msg) throws Exception {     this.initReConnectReq = msg;     if (webSocketClient.isOpen()) {       webSocketClient.send(msg);     }   }    /**    * 关闭    *    * @param msg 关闭消息    */   public void close(String msg) {     needPing.set(false);     end.set(true);     if (webSocketClient != null) {       webSocketClient.closeConnection(3, msg);     }   }    /**    * 忽略证书    *    * @param client    */   public void trustAllHosts(WebSocketClient client) {     TrustManager[] trustAllCerts =         new TrustManager[] {           new X509ExtendedTrustManager() {              @Override             public void checkClientTrusted(                 X509Certificate[] x509Certificates, String s, Socket socket)                 throws CertificateException {}              @Override             public void checkServerTrusted(                 X509Certificate[] x509Certificates, String s, Socket socket)                 throws CertificateException {}              @Override             public void checkClientTrusted(                 X509Certificate[] x509Certificates, String s, SSLEngine sslEngine)                 throws CertificateException {}              @Override             public void checkServerTrusted(                 X509Certificate[] x509Certificates, String s, SSLEngine sslEngine)                 throws CertificateException {}              @Override             public void checkClientTrusted(X509Certificate[] x509Certificates, String s)                 throws CertificateException {}              @Override             public void checkServerTrusted(X509Certificate[] x509Certificates, String s)                 throws CertificateException {}              @Override             public X509Certificate[] getAcceptedIssuers() {               return null;             }           }         };      try {       SSLContext ssl = SSLContext.getInstance("SSL");       ssl.init(null, trustAllCerts, new java.security.SecureRandom());       SSLSocketFactory socketFactory = ssl.getSocketFactory();       client.setSocketFactory(socketFactory);     } catch (Exception e) {       log.error("ReConnectWebSocketClient trustAllHosts 异常，e={0}", e);     }   }  } </code></pre> <p><strong>代码说明：</strong></p> <p>1、参数的重连次数可以配置。</p> <p>2、增加异步pingpong线程，一旦结束连接会自动关闭。</p> <p>3、对字符串、字节流、异常都有回调措施。</p> <p><strong>测试代码方法</strong></p> <pre><code class="language-java">  public static void main(String[] args) throws Exception {     ReConnectWebSocketClient client =         new ReConnectWebSocketClient(             new URI(String.format("wss://192.168.1.77:24009")),             "test",             // 字符串消息处理             msg -> {               // todo 字符串消息处理               System.out.println("字符串消息:" + msg);             },             null,             // 异常回调             error -> {               // todo 字符串消息处理               System.out.println("异常:" + error.getMessage());             });     client.connect();     client.send("haha");   }</code></pre> <p><strong>验证结果</strong></p> <pre><code>16:08:54.468 [WebSocketConnectReadThread-12] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onOpen]连接成功/192.168.1.77:24009 16:08:54.475 [WebSocketConnectReadThread-12] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onMessage]接收到服务端数据：text=connect success from tcp4:192.168.6.63:11018! 字符串消息:connect success from tcp4:192.168.6.63:11018! 16:08:56.080 [WebSocketConnectReadThread-12] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onClose]关闭，s=，b=true 16:09:06.097 [WebSocketConnectReadThread-12] WARN ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]第[1]次断开重连 16:09:06.150 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onOpen]连接成功/192.168.1.77:24009 16:09:06.150 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onMessage]接收到服务端数据：text=connect success from tcp4:192.168.6.63:11038! 字符串消息:connect success from tcp4:192.168.6.63:11038! 16:09:09.369 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:14.370 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:19.371 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:24.379 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:29.382 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:34.398 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:39.402 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:44.404 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:49.415 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:54.429 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:09:59.437 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:10:04.449 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:10:06.154 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:10:09.455 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:10:14.462 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:10:19.468 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onWebsocketPong]接收到服务端数据：opcode=PONG 16:10:19.644 [WebSocketConnectReadThread-16] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onClose]关闭，s=，b=true 16:10:29.654 [WebSocketConnectReadThread-16] WARN ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]第[2]次断开重连 16:10:31.710 [WebSocketConnectReadThread-19] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onError]异常，e={} java.net.ConnectException: Connection refused: connect 	at java.net.DualStackPlainSocketImpl.connect0(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at sun.security.ssl.SSLSocketImpl.connect(SSLSocketImpl.java:673) 	at org.java_websocket.client.WebSocketClient.run(WebSocketClient.java:461) 	at java.lang.Thread.run(Thread.java:748) 16:10:31.710 [WebSocketConnectReadThread-19] INFO ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]ReConnectWebSocketClient [onClose]关闭，s=error close，b=false 异常:Connection refused: connect 16:10:34.473 [Thread-0] WARN ai.guiji.csdn.ws.client.ReConnectWebSocketClient - [test]Ping循环关闭</code></pre> <p>这里我才用的是手动关闭服务端方式触发，客户端被动断连情况。重连两次，第二次服务端还未启动导致异常触发。</p> <h1 id="%E6%80%BB%E7%BB%93">总结</h1> <p>没啥好总结的，代码注释比较清楚。</p> <p>如果对你有用，一健三连走一波！</p> </p></div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-3035.htm">Minikube使用文档</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-3037.htm">MySQL备份迁移之mydumper</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7232.htm" title="宠物疫苗真伪查询官网（宠物疫苗接种查询系统）">宠物疫苗真伪查询官网（宠物疫苗接种查询系统）</a></li>
                        <li class="py-2"><a href="/html/category/article-6213.htm" title="附近流浪狗收养中心有几公里（附近有没有流浪狗收养）">附近流浪狗收养中心有几公里（附近有没有流浪狗收养）</a></li>
                        <li class="py-2"><a href="/html/category/article-7094.htm" title="属马养猫运气会变差吗（属马的能养猫咪吗）">属马养猫运气会变差吗（属马的能养猫咪吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7462.htm" title="宠物猫打疫苗是什么疫苗（宠物猫打疫苗是什么疫苗啊）">宠物猫打疫苗是什么疫苗（宠物猫打疫苗是什么疫苗啊）</a></li>
                        <li class="py-2"><a href="/html/category/article-7416.htm" title="领养宠物的协议（领养宠物协议有法律效力吗）">领养宠物的协议（领养宠物协议有法律效力吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-5975.htm" title="十大快递公司品牌是哪些公司(十大快递公司品牌是哪些牌子)">十大快递公司品牌是哪些公司(十大快递公司品牌是哪些牌子)</a></li>
                        <li class="py-2"><a href="/html/category/article-6168.htm" title="动物疫苗厂家排名榜前十名有哪些呢（动物疫苗厂家排名榜前十名有哪些呢视频）">动物疫苗厂家排名榜前十名有哪些呢（动物疫苗厂家排名榜前十名有哪些呢视频）</a></li>
                        <li class="py-2"><a href="/html/category/article-7693.htm" title="哪有免费领养宠物的附近（免费领养宠物的地方）">哪有免费领养宠物的附近（免费领养宠物的地方）</a></li>
                        <li class="py-2"><a href="/html/category/article-7002.htm" title="动物疫苗使用方法视频（动物疫苗使用方法视频教程）">动物疫苗使用方法视频（动物疫苗使用方法视频教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-7371.htm" title="动物疫苗多长时间内打有效呢（动物疫苗注射后多久产生抗体）">动物疫苗多长时间内打有效呢（动物疫苗注射后多久产生抗体）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">26</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>