<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-2933.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>kubeadm 搭建 K8s - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">kubeadm 搭建 K8s</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<h1 id="kubeadm-搭建-k8s">kubeadm 搭建 K8s</h1> <blockquote> <p>本篇主要记录一下 使用 kubeadm 搭建 k8s 详细过程 ，环境使用 VirtualBox 构建的3台虚拟机</p> </blockquote> <h3 id="1环境准备">1.环境准备</h3> <ul> <li>操作系统：Centos7 （CentOS Linux release 7.9.2009）</li> <li>Master  主节点：  1台 虚拟机</li> <li>Node 计算节点： 2台 虚拟机</li> <li>K8s version：v1.23.5 （选的较新的版本）</li> <li>Docker version：20.10.14</li> </ul> <p><code>虚拟机创建我就不详细展开了</code></p> <h3 id="2虚拟机网络配置保证能访问外网">2.虚拟机网络配置(保证能访问外网)</h3> <blockquote> <p>虚拟机网卡 选择的是 1.网络地址转换NAT （主要用来访问外网的） 2.仅主机网络 （主要用来宿主机访问虚拟机的）</p> <p>把对应的 ip 设置如下</p> <p>kube-master    192.168.56.20</p> <p>kube-node-1    192.168.56.21</p> <p>kube-node-2    192.168.56.22</p> </blockquote> <h4 id="21-3台虚拟机-静态ip配置">2.1 3台虚拟机 静态ip配置</h4> <p>cat /etc/sysconfig/network-scripts/ifcfg-enp0s3</p> <pre><code class="language-shell">TYPE="Ethernet" PROXY_METHOD="none" BROWSER_ONLY="no" BOOTPROTO="none" #关闭 DEFROUTE="yes" IPV4_FAILURE_FATAL="no" IPV6INIT="yes" IPV6_AUTOCONF="yes" IPV6_DEFROUTE="yes" IPV6_FAILURE_FATAL="no" IPV6_ADDR_GEN_MODE="stable-privacy" NAME="enp0s3" UUID="35eac2d4-234d-4859-848e-ed2a30a64a81" DEVICE="enp0s3" #添加部分  IPADDR="10.0.2.20" PREFIX="24" GATEWAY="10.0.2.2" DNS1="10.0.2.3" DNS2="114.114.114.114" ONBOOT="yes"</code></pre> <p>cat /etc/sysconfig/network-scripts/ifcfg-enp0s8</p> <pre><code class="language-shell">TYPE=Ethernet PROXY_METHOD=none BROWSER_ONLY=no BOOTPROTO=static #修改为 static 静态ip DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=enp0s8 UUID=d06bac6d-294f-4bfe-bf08-5cb65c0a431f DEVICE=enp0s8 #新增部分 IPADDR=192.168.56.20 PREFIX=24 ONBOOT=yes</code></pre> <h4 id="22-虚拟机hosts-配置">2.2 虚拟机hosts 配置</h4> <p>在 3台虚拟机  /etc/hosts 中配置 如下</p> <pre><code class="language-shell">192.168.56.20	kube-master 192.168.56.21	kube-node-1 192.168.56.22	kube-node-2</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2e5b5be881d08d05910e96de325108af.jpg" alt="kubeadm 搭建 K8s"></p> <h3 id="3k8s-基础环境设置">3.k8s 基础环境设置</h3> <h4 id="31-yum-换源可选">3.1 yum 换源(可选)</h4> <pre><code class="language-shell">yum -y install wget  cd /etc/yum.repos.d mv CentOS-Base.repo CentOS-Base.repo.bak wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo yum clean all yum makecache #重新生成缓存</code></pre> <h4 id="32-关闭-selinux">3.2 关闭 selinux</h4> <pre><code class="language-shell">setenforce 0 #临时关闭 sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config #永久关闭</code></pre> <h4 id="33-关闭swap分区或禁用swap文件">3.3 关闭swap分区或禁用swap文件</h4> <pre><code class="language-shell">swapoff -a # 注释掉关于swap分区的行 yes | cp /etc/fstab /etc/fstab_bak cat /etc/fstab_bak |grep -v swap > /etc/fstab</code></pre> <h4 id="34-允许iptables-检查桥接流量">3.4 允许iptables 检查桥接流量</h4> <pre><code class="language-bash">cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf br_netfilter EOF  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF  sudo sysctl --system</code></pre> <h4 id="35-关闭防火墙">3.5 关闭防火墙</h4> <pre><code class="language-shell">systemctl stop firewalld systemctl disable firewalld</code></pre> <h4 id="36-procsysnetipv4ip_forward">3.6 /proc/sys/net/ipv4/ip_forward</h4> <pre><code class="language-shell">echo 1 > /proc/sys/net/ipv4/ip_forward</code></pre> <h3 id="4kubectlkubeadmkubelet的安装">4.kubectl、kubeadm、kubelet的安装</h3> <blockquote> <p>注意 先换源https://developer.aliyun.com/mirror/kubernetes?spm=a2c6h.13651102.0.0.64be1b11iddYWH 阿里换源文档</p> </blockquote> <h4 id="41-添加kubernetes的alibaba-yum源">4.1 添加Kubernetes的alibaba yum源</h4> <pre><code class="language-shell">cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/ enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF  yum install -y kubelet kubeadm kubectl</code></pre> <h4 id="42-安装-kubelet-kubeadm-kubectl">4.2 安装 kubelet kubeadm kubectl</h4> <pre><code class="language-shell">yum install -y kubelet kubeadm kubectl  systemctl enable kubelet && systemctl start kubelet</code></pre> <p>由于官网未开放同步方式, 可能会有索引gpg检查失败的情况, 这时请用<code>yum install -y --nogpgcheck kubelet kubeadm kubectl</code> 安装</p> <h4 id="43-启动kubelet-服务">4.3 启动kubelet 服务</h4> <pre><code class="language-shell">systemctl enable kubelet && systemctl start kubelet</code></pre> <p>此时执行<code>systemctl status kubelet</code>查看服务状态，此时肯定有错误（因为我们还未进行初始化操作），错误可使用<code>journalctl -xe</code>查看错误信息。</p> <h3 id="5docker-安装和配置">5.Docker 安装和配置</h3> <blockquote> <p>Docker centos 安装文档 地址https://docs.docker.com/engine/install/centos/</p> </blockquote> <h4 id="51-docker-安装">5.1 Docker 安装</h4> <pre><code class="language-shell">sudo yum install -y yum-utils  sudo yum-config-manager \     --add-repo \     https://download.docker.com/linux/centos/docker-ce.repo           sudo yum install docker-ce docker-ce-cli containerd.io  # 也可以安装其他版本 yum list docker-ce --showduplicates | sort -r   # sudo yum install docker-ce-<VERSION_STRING> docker-ce-cli-<VERSION_STRING> containerd.io  #启动docker sudo systemctl enable docker && systemctl start docker</code></pre> <h4 id="52-docker-镜像源更换">5.2 Docker 镜像源更换</h4> <pre><code class="language-yaml">sudo tee /etc/docker/daemon.json <<-'EOF' {   "registry-mirrors": ["https://9xxxx1clo.mirror.aliyuncs.com"] #请更换自己的 阿里云镜像地址 } EOF</code></pre> <h4 id="53-docker-配置cgroup-driver">5.3 Docker 配置cgroup-driver</h4> <blockquote> <p>由于 cgroup-driver ，默认docker 是 cgroupfs ，而k8s 默认是 systemd，所以需要设置 docker 的 cgroup 为 systemd</p> </blockquote> <p><code>推荐使用方式二进行修改</code></p> <pre><code class="language-shell">#查看cgroup-driver   docker info | grep -i cgroup # 方式一 追加 --exec-opt native.cgroupdriver=systemd 参数  sed -i "s#^ExecStart=/usr/bin/dockerd.*#ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd#g" /usr/lib/systemd/system/docker.service    systemctl daemon-reload # 重新加载服务  systemctl enable docker # 启用docker服务(开机自起)  systemctl restart docker # 启动docker服务  # 方式二 修改docker配置文件  vim /etc/docker/daemon.json {   "exec-opts": ["native.cgroupdriver=systemd"] }</code></pre> <h4 id="54-拉取k8s所需镜像">5.4 拉取k8s所需镜像</h4> <blockquote> <p>可以通过</p> <p><code>kubeadm config images list</code>   查看 所需的镜像</p> </blockquote> <pre><code class="language-shell">kubeadm config images list   k8s.gcr.io/kube-apiserver:v1.23.5 k8s.gcr.io/kube-controller-manager:v1.23.5 k8s.gcr.io/kube-scheduler:v1.23.5 k8s.gcr.io/kube-proxy:v1.23.5 k8s.gcr.io/pause:3.6 k8s.gcr.io/etcd:3.5.1-0 k8s.gcr.io/coredns/coredns:v1.8.6</code></pre> <p>如果拉取不到镜像 可以通过 去 docker hub 上查找对应的 镜像</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/161ed070f18282711ef68852e151371e.jpg" alt="kubeadm 搭建 K8s"></p> <pre><code class="language-shell">docker pull k8simage/kube-apiserver:v1.23.5    docker tag k8simage/kube-apiserver:v1.23.5 k8s.gcr.io/kube-apiserver:v1.23.5 #重新tag改成上面所需的镜像即可， 其他的都按照这样来</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/c007b2f084130d8d47851f63d6497bb3.jpg" alt="kubeadm 搭建 K8s"></p> <p><code>Tips:</code> 完成上面操作后 你可以通过 docker save 导出镜像,以后再用的时候 可以通过 docker image load < 进行离线加载镜像</p> <pre><code class="language-shell">#导出镜像 ，批量导出所有镜像  docker save $(docker images --format '{{.Repository}}:{{.Tag}}') -o k8s.images.tar  #导入镜像 ，注意 是 < 不是 > 。。 > 后会导致tar 无法使用需要重新上传 docker image load < ...tar/zip</code></pre> <h3 id="6kube-master-节点-初始化">6.kube-master 节点 初始化</h3> <blockquote> <p>我这里选的是 flannel 网络插件，先来看看 flannel 的配置文件</p> </blockquote> <h4 id="61-查看flannel-网络范围">6.1 查看flannel 网络范围</h4> <blockquote> <p>flannel.ymlhttps://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml</p> <p>不同的 网络插件 网络范围不同</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/30922e54e534eb7e3e2192ca493b9ab6.jpg" alt="kubeadm 搭建 K8s"></p> <h4 id="62-kubeadm-init-初始化">6.2 kubeadm init 初始化</h4> <pre><code class="language-shell">kubeadm init --pod-network-cidr=10.244.0.0/16 \ #网卡插件的 网络范围  --apiserver-advertise-address=192.168.56.20 #master 的 ip 地址</code></pre> <p>等一会就会有如下结果</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f70179143acebb7665d57775c28827c4.jpg" alt="kubeadm 搭建 K8s"></p> <p>可以把 kubeadm join 命令记下来 便于后面使用 保存输出中的<code>kubeadm join</code>部分内容，用于添加node节点，或者使用<code>kubeadm token list</code> 和<code>kubeadm token create --print-join-command</code>查看</p> <p>执行后续步骤，可以看到提示</p> <pre><code class="language-shell">mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config</code></pre> <h4 id="63-网络插件flannel-配置">6.3 网络插件flannel 配置</h4> <blockquote> <p>前面提到了flannel 把对应的flannel.yml文件下载到服务器中，可以使用wget</p> </blockquote> <p>可以看到 在没配置 flannel 的时候 coredns 一直是 pending 状态</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1c2bc5e204ff69ea03daa47d0d21afdf.jpg" alt="kubeadm 搭建 K8s"></p> <pre><code class="language-shell">wget https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml #可能会下载不到，文章最后我会提供内容，直接copy过去即可  #Tips: 可能需要指定一下网卡 ，在kube-flannel.yml中 - /opt/bin/flanneld args: 后面添加 #- --iface=enp0s8 # 需要指定网卡，否则可能k8s会导致使用错误的网卡   kubectl apply -f kube-flannel.yml #应用该文件</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/42322efa757c7d7bb0d123a5592d9a5a.jpg" alt="kubeadm 搭建 K8s"></p> <pre><code class="language-shell">kubectl get pods --all-namespaces -o wide #查看是否安装成功，它会在 master 和 node 节点上都会自动部署</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/4342a298422edc44613bf1d3c0667c63.jpg" alt="kubeadm 搭建 K8s"></p> <p>最后通过   kubectl get nodes  -o wide 查看 节点</p> <h3 id="7kube-node-节点初始化">7.kube-node 节点初始化</h3> <h4 id="71-查看token">7.1 查看token</h4> <p>可以通过该命令进行查看 token</p> <pre><code class="language-shell">kubeadm token create --print-join-command  #kubeadm join kube-master:6443 --token ii5xyw.mywlktar1e8f60cu --discovery-token-ca-cert-hash sha256:358f92418178342f79aa7b049e6c18a423f0fb88186189142459016fe6efb8e7</code></pre> <h4 id="72-node节点上-执行-kubeadmin-join">7.2 node节点上 执行 kubeadmin join</h4> <pre><code class="language-shell">kubeadm join kube-master:6443 --token ii5xyw.mywlktar1e8f60cu --discovery-token-ca-cert-hash sha256:358f92418178342f79aa7b049e6c18a423f0fb88186189142459016fe6efb8e7</code></pre> <h4 id="73-在master-上查看结果">7.3 在master 上查看结果</h4> <pre><code class="language-shell">watch kubectl get nodes -o wide #可以通过watch 实时监听 加入情况</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/377dc7e3f422abd917708e63c8791ef0.jpg" alt="kubeadm 搭建 K8s"></p> <p><strong>至此使用  kubeadm 已经成功搭建k8s 集群</strong></p> <h3 id="总结">总结</h3> <p>本篇主要讲解了 如何使用 kubeadm 进行搭建 k8s 集群 ，搭建的是 k8s 较新版本 v1.23.5 版本，使用kubeadm 搭建相对来说还是比较简单的 。</p> <h4 id="k8s官网文档">k8s官网文档</h4> <p>https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</p> <h4 id="阿里-k8s-更换镜像文档">阿里 k8s 更换镜像文档</h4> <p>https://developer.aliyun.com/mirror/kubernetes?spm=a2c6h.13651102.0.0.64be1b11iddYWH</p> <h4 id="docker-hub-地址">Docker hub 地址</h4> <p>https://hub.docker.com/r/k8simage/</p> <h4 id="docker-安装地址">Docker 安装地址</h4> <p>https://docs.docker.com/engine/install/centos/</p> <h3 id="flannelyml-文件">flannel.yml 文件</h3> <pre><code class="language-yaml">--- apiVersion: policy/v1beta1 kind: PodSecurityPolicy metadata:   name: psp.flannel.unprivileged   annotations:     seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default     seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default     apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default     apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default spec:   privileged: false   volumes:   - configMap   - secret   - emptyDir   - hostPath   allowedHostPaths:   - pathPrefix: "/etc/cni/net.d"   - pathPrefix: "/etc/kube-flannel"   - pathPrefix: "/run/flannel"   readOnlyRootFilesystem: false   # Users and groups   runAsUser:     rule: RunAsAny   supplementalGroups:     rule: RunAsAny   fsGroup:     rule: RunAsAny   # Privilege Escalation   allowPrivilegeEscalation: false   defaultAllowPrivilegeEscalation: false   # Capabilities   allowedCapabilities: ['NET_ADMIN', 'NET_RAW']   defaultAddCapabilities: []   requiredDropCapabilities: []   # Host namespaces   hostPID: false   hostIPC: false   hostNetwork: true   hostPorts:   - min: 0     max: 65535   # SELinux   seLinux:     # SELinux is unused in CaaSP     rule: 'RunAsAny' --- kind: ClusterRole apiVersion: rbac.authorization.k8s.io/v1 metadata:   name: flannel rules: - apiGroups: ['extensions']   resources: ['podsecuritypolicies']   verbs: ['use']   resourceNames: ['psp.flannel.unprivileged'] - apiGroups:   - ""   resources:   - pods   verbs:   - get - apiGroups:   - ""   resources:   - nodes   verbs:   - list   - watch - apiGroups:   - ""   resources:   - nodes/status   verbs:   - patch --- kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1 metadata:   name: flannel roleRef:   apiGroup: rbac.authorization.k8s.io   kind: ClusterRole   name: flannel subjects: - kind: ServiceAccount   name: flannel   namespace: kube-system --- apiVersion: v1 kind: ServiceAccount metadata:   name: flannel   namespace: kube-system --- kind: ConfigMap apiVersion: v1 metadata:   name: kube-flannel-cfg   namespace: kube-system   labels:     tier: node     app: flannel data:   cni-conf.json: |     {       "name": "cbr0",       "cniVersion": "0.3.1",       "plugins": [         {           "type": "flannel",           "delegate": {             "hairpinMode": true,             "isDefaultGateway": true           }         },         {           "type": "portmap",           "capabilities": {             "portMappings": true           }         }       ]     }   net-conf.json: |     {       "Network": "10.244.0.0/16",       "Backend": {         "Type": "vxlan"       }     } --- apiVersion: apps/v1 kind: DaemonSet metadata:   name: kube-flannel-ds   namespace: kube-system   labels:     tier: node     app: flannel spec:   selector:     matchLabels:       app: flannel   template:     metadata:       labels:         tier: node         app: flannel     spec:       affinity:         nodeAffinity:           requiredDuringSchedulingIgnoredDuringExecution:             nodeSelectorTerms:             - matchExpressions:               - key: kubernetes.io/os                 operator: In                 values:                 - linux       hostNetwork: true       priorityClassName: system-node-critical       tolerations:       - operator: Exists         effect: NoSchedule       serviceAccountName: flannel       initContainers:       - name: install-cni-plugin        #image: flannelcni/flannel-cni-plugin:v1.0.1 for ppc64le and mips64le (dockerhub limitations may apply)         image: rancher/mirrored-flannelcni-flannel-cni-plugin:v1.0.1         command:         - cp         args:         - -f         - /flannel         - /opt/cni/bin/flannel         volumeMounts:         - name: cni-plugin           mountPath: /opt/cni/bin       - name: install-cni        #image: flannelcni/flannel:v0.17.0 for ppc64le and mips64le (dockerhub limitations may apply)         image: rancher/mirrored-flannelcni-flannel:v0.17.0         command:         - cp         args:         - -f         - /etc/kube-flannel/cni-conf.json         - /etc/cni/net.d/10-flannel.conflist         volumeMounts:         - name: cni           mountPath: /etc/cni/net.d         - name: flannel-cfg           mountPath: /etc/kube-flannel/       containers:       - name: kube-flannel        #image: flannelcni/flannel:v0.17.0 for ppc64le and mips64le (dockerhub limitations may apply)         image: rancher/mirrored-flannelcni-flannel:v0.17.0         command:         - /opt/bin/flanneld         args:         #- --iface=enp0s8 # 需要指定网卡，否则可能会导致问题         - --ip-masq         - --kube-subnet-mgr         resources:           requests:             cpu: "100m"             memory: "50Mi"           limits:             cpu: "100m"             memory: "50Mi"         securityContext:           privileged: false           capabilities:             add: ["NET_ADMIN", "NET_RAW"]         env:         - name: POD_NAME           valueFrom:             fieldRef:               fieldPath: metadata.name         - name: POD_NAMESPACE           valueFrom:             fieldRef:               fieldPath: metadata.namespace         - name: EVENT_QUEUE_DEPTH           value: "5000"         volumeMounts:         - name: run           mountPath: /run/flannel         - name: flannel-cfg           mountPath: /etc/kube-flannel/         - name: xtables-lock           mountPath: /run/xtables.lock       volumes:       - name: run         hostPath:           path: /run/flannel       - name: cni-plugin         hostPath:           path: /opt/cni/bin       - name: cni         hostPath:           path: /etc/cni/net.d       - name: flannel-cfg         configMap:           name: kube-flannel-cfg       - name: xtables-lock         hostPath:           path: /run/xtables.lock           type: FileOrCreate</code></pre> <blockquote> <p></p> </blockquote> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-2932.htm">Python连接HDFS实现文件上传下载及Pandas转换文本文件到CSV</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-2934.htm">Python清理PC端微信产生的超大数据</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7049.htm" title="宠物领养合同违约金30000元合法吗（领养宠物签的合同到底有用吗）">宠物领养合同违约金30000元合法吗（领养宠物签的合同到底有用吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7600.htm" title="宠物粮生产利润 宠物粮生产利润怎么样">宠物粮生产利润 宠物粮生产利润怎么样</a></li>
                        <li class="py-2"><a href="/html/category/article-7554.htm" title="宠物粮原料（宠物粮种类）">宠物粮原料（宠物粮种类）</a></li>
                        <li class="py-2"><a href="/html/category/article-6726.htm" title="dnf新图（dnf端游图标）">dnf新图（dnf端游图标）</a></li>
                        <li class="py-2"><a href="/html/category/article-7141.htm" title="阿博（博阿斯胡尔克）">阿博（博阿斯胡尔克）</a></li>
                        <li class="py-2"><a href="/html/category/article-6957.htm" title="宠物医生需要什么学历和专业（宠物医生需要什么学历和专业的）">宠物医生需要什么学历和专业（宠物医生需要什么学历和专业的）</a></li>
                        <li class="py-2"><a href="/html/category/article-7002.htm" title="动物疫苗使用方法视频（动物疫苗使用方法视频教程）">动物疫苗使用方法视频（动物疫苗使用方法视频教程）</a></li>
                        <li class="py-2"><a href="/html/category/article-7325.htm" title="全国兽药30强企业 全国兽药30强企业排名">全国兽药30强企业 全国兽药30强企业排名</a></li>
                        <li class="py-2"><a href="/html/category/article-7646.htm" title="世界上最大的四个岛屿(世界最大岛屿排名)">世界上最大的四个岛屿(世界最大岛屿排名)</a></li>
                        <li class="py-2"><a href="/html/category/article-7508.htm" title="济南联美宠物食品有限公司怎么样呀（济南美联教育）">济南联美宠物食品有限公司怎么样呀（济南美联教育）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>