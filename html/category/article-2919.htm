<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-2919.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>SpringBoot 注解 + 反射优雅的实现Excel导入导出，通用加强版！ - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">SpringBoot 注解 + 反射优雅的实现Excel导入导出，通用加强版！</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="htmledit_views"> <div id="js_content"> <p>Excel 导入与导出是项目中经常用到的功能，在 Java 中常用 poi 实现 Excel 的导入与导出。由于 poi 占用内存较大，在高并发下很容易发生 OOM 或者频繁 fullgc，阿里基于 poi 开源了 EasyExcel 项目。</p> <p>除了节约内存，EasyExcel 还简化了 API，通过注解映射 Excel 单元格与对象字段之间的关系，简单的几行代码就能搞定复杂的导入导出功能了。</p> <h2>EasyExcel 问题</h2> <p>看似一切美好，不过经常做 Excel 导入与导出就会发现，EasyExcel 还是没那么完美的。</p> <p>首先，导入与导出 Excel 本质是上将 Excel 文件内容与 Java 对象之间做一个映射，EasyExcel 做的只是在这两者之间转换。如果项目中的 Excel 导入与导出功能比较多，会产生大量的样板式代码，使用体验类似于 JDBC。</p> <p>另外，导入往往还伴随着校验，这是 EasyExcel 没有支持的功能。如果需要校验，要么写代码手动判断，要么调用Java Validation 规范 定义的 API 判断，这又会产生大量样板式代码。</p> <p>而且，当前 spring boot 已经成了必备的 Java 开发框架，easyexcel 也没有进行整合。</p> <h2>分析与解决</h2> <p>导入与导出通常发生在 Web 环境，对于 Spring MVC 来说，可以将请求信息转换为任意类型的 contoller 方法参数，将 controller 方法返回值转换为客户端支持的内容。</p> <p>如果能够使用自定义的 controller 方法参数接收 Excel 文件内容，将 controller 方法返回值转换为 Excel 文件响应，可以直接消除 Excel 导入与导出时的样板式代码。</p> <p>另外在将请求内容转换为 controller 方法参数时还可以加入自定义的校验逻辑。公众 号Java精选，回复java面试，获取面试资料，支持在线刷题。</p> <p>由于 Excel 导入与导出样板式代码、校验问题与具体的业务逻辑无关，可以单独抽象出来，我这里在 EasyExcel 的基础上封装了一个 easyexcel-spring-boot-starter 的项目，大大降低了 EasyExcel 上手的门槛，对用户来说只需要使用 EasyExcel 定义的注解提供映射关系就可以了，适用于简单场景的导入导出。</p> <p>项目代码已上传 github easyexcel-spring-boot-starter 仓库&nbsp;，点击链接即可查阅。下面就来看看怎样使用吧。</p> <h2>Spring Boot Excel 导入与导出</h2> <h2>依赖引入</h2> <p>首先需要引入依赖，坐标如下。</p> <pre class="has"><code class="language-go"><dependency>     <groupId>com.zzuhkp</groupId>     easyexcel-spring-boot-starter</artifactId>     <version>1.0-SNAPSHOT</version> </dependency></code></pre> <p>不过很不幸的是目前还没传至中央仓库，需要的小伙伴可自行上传到私有仓库或直接把代码嵌入自己的项目。</p> <h2>Excel 导入</h2> <p>首先看下要导入的 Excel 内容吧。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/62fb49a0ebae1e6610ef4c6e8234650f.jpg" alt="SpringBoot 注解 + 反射优雅的实现Excel导入导出，通用加强版！"></p> <p>为了接收 Excel 文件内容，我们需要定义一个对应的 Model 类。</p> <pre class="has"><code class="language-go">@Datapublic class DemoData {       @ExcelProperty(index = 0)     private Integer integer;      @ExcelProperty(index = 1)     private String string;      @ExcelProperty(index = 2)     private Date date;}</code></pre> <h3>基本导入功能</h3> <p>然后使用&nbsp;<code>List<T></code>&nbsp;参数接收即可。</p> <pre class="has"><code class="language-go">@PostMapping("/list/obj")public List<DemoData> listObj(@ExcelParam List<DemoData> list) {     return list; }</code></pre> <p>注意参数前添加了&nbsp;<code>@ExcelParam</code>&nbsp;注解，用来标识 Excel 文件参数。这样，一个导入功能实现了，是不是很简单呢？</p> <p>默认情况下接收名称为&nbsp;<code>file</code>&nbsp;的表单字段作为 Excel 文件，如果不满足还可以修改。</p> <pre class="has"><code class="language-go">@ExcelParam(value = "file", required = true)</code></pre> <h3>进阶导入功能</h3> <p>有时候，我们可能比较关心对象对应 Excel 的元数据，例如这个对象是第几行记录产生的，这个对象的字段对应 Excel 第几列，这个时候我们可以使用&nbsp;<code>ReadRows<T></code>&nbsp;参数接收 Excel。</p> <pre class="has"><code class="language-go">@PostMapping("/list/rows")public ReadRows<DemoData> readRows(@ExcelParam ReadRows<DemoData> readRows) {     return readRows; }</code></pre> <p><code>ReadRows</code>&nbsp;使用两个字段记录行映射关系与列映射关系。面试宝典：https://www.yoodb.com</p> <pre class="has"><code class="language-go">public class ReadRows<T> {       private ExcelReadHeadProperty excelReadHeadProperty;     private List<ReadRow<T>> rows; }</code></pre> <p><code>ExcelReadHeadProperty</code>&nbsp;是 EasyExcel 自带的类，表示列映射关系的元数据。&nbsp;<code>ReadRow</code>&nbsp;是框架自定义的类，表示行映射关系的元数据。</p> <p>看下&nbsp;<code>ReadRow</code>&nbsp;定义吧。</p> <pre class="has"><code class="language-go">public class ReadRow<T> {       // 行索引，从 0 开始     private final Integer rowIndex;      // 行记录对应对象 private final T data; }</code></pre> <p>使用&nbsp;<code>ExcelReadHeadProperty</code>&nbsp;获取字段对应列索引的示例代码如下。</p> <pre class="has"><code class="language-go">// 对象字段名称 -> 从 0 开始的列索引Map<String, Integer> fieldColumnIndexMap = readRows.getExcelReadHeadProperty().getHeadMap().values()         .stream().collect(Collectors.toMap(Head::getFieldName, Head::getColumnIndex));</code></pre> <h2>Excel 导出</h2> <p>这里对 Excel 的导出进行了简单的支持。将&nbsp;<code>List<T></code>&nbsp;定义为 controller 方法返回值即可。</p> <pre class="has"><code class="language-go">@ExcelResponse@GetMapping("/list/download")public List<DemoData> downloadList() { return Arrays.asList(new DemoData(1, "hello", new Date()), new DemoData(2, "excel", new Date())); }</code></pre> <p>需要注意的是使用&nbsp;<code>@ExcelResponse</code>&nbsp;注解表示响应内容为 Excel 文件。默认情况，下载的文件名称为&nbsp;<code>default.xlxs</code>&nbsp;，写入到名称为&nbsp;<code>Sheet1</code>&nbsp;的工作表中。如果不满足需求可以修改。</p> <pre class="has"><code class="language-go">@ExcelResponse(fileName = "测试文件", sheetName = "工作表1")</code></pre> <h2><a href="" rel="nofollow">Excel 导入参数校验</h2> <p>参数校验是 Excel 导入常用的功能，这里进行了强有力的支持，使用体验如原生 spring boot 校验般顺滑。</p> <h2>开启校验</h2> <p>与 spring boot 原生使用方式一样，将&nbsp;<code>@Validated</code>&nbsp;或&nbsp;<code>@Valid</code>&nbsp;注解添加到&nbsp;<code>@ExcelParam</code>&nbsp;参数上即可。</p> <pre class="has"><code class="language-go">@PostMapping("/list/obj")public List<DemoData> listObj(@ExcelParam @Validated List<DemoData> list) { return list; }</code></pre> <h2>校验规则定义</h2> <h3>Bean Validation 定义校验规则</h3> <p>默认情况下框架使用 JSR-303 Bean Validation 规范定义的校验注解校验，需要手动引入&nbsp;<code>spring-boot-starter-validation</code>&nbsp;，可通过设置环境变量&nbsp;<code>easyexcel.validator.default.enable=false</code>&nbsp;关闭。</p> <pre class="has"><code class="language-go">@Datapublic class DemoData {       @NotNull(message = "参数不能为空")     private Integer integer;     private String string;     private Date date; }</code></pre> <p>另外还可以自定义注解对对象校验。</p> <pre class="has"><code class="language-go">... 省略其他元注解@Constraint(validatedBy = { DemoDataValid.DemoDataValidator.class})public @interface DemoDataValid {  		... 省略注解属性		     class DemoDataValidator implements ConstraintValidator<DemoDataValid, DemoData> {           @Override         public boolean isValid(DemoData value, ConstraintValidatorContext context) {              context.disableDefaultConstraintViolation();             context.buildConstraintViolationWithTemplate("测试对象校验").addConstraintViolation();             return false;         }     }}</code></pre> <pre class="has"><code class="language-go">@DemoDataValidpublic class DemoData {      ... 省略属性}</code></pre> <h3>ExcelValidator 接口定义校验规则</h3> <p>Bean Validation 注解只能校验单个字段或对象，如果需要对所有的对象进行校验，可以实现框架定义的&nbsp;<code>ExcelValidator</code>&nbsp;接口，然后将实现定义为 Spring Bean。</p> <p>这个接口定义如下。</p> <pre class="has"><code class="language-go">public interface ExcelValidator<T> {      ExcelValidErrors validate(ReadRows<T> readRows); }</code></pre> <p><code>ExcelValidErrors</code>&nbsp;用于接收校验的错误信息，分别使用接口&nbsp;<code>ExcelValidObjectError</code>&nbsp;和&nbsp;<code>ExcelValidFieldError</code>&nbsp;接口定义行错误信息和单元格错误信息。</p> <pre class="has"><code class="language-go">public class ExcelValidErrors {  	// 行错误信息或单元格错误信息列表     private final List<ExcelValidObjectError> errors;}public interface ExcelValidObjectError {       // 获取行号，从 1 开始     Integer getRow();      // 获取错误消息，公众 号Java精选，有惊喜！     String getMessage();}public interface ExcelValidFieldError extends ExcelValidObjectError {       // 获取列，从 1 开始     Integer getColumn(); }</code></pre> <p>例如，如果需要对所有的&nbsp;<code>DemoData</code>&nbsp;校验&nbsp;<code>integer</code>&nbsp;字段的值不能重复，可以使用如下的代码。</p> <pre class="has"><code class="language-go">@Componentpublic class CustomExcelValidator implements ExcelValidator<DemoData> {      @Override     public ExcelValidErrors validate(ReadRows<DemoData> readRows) {          ExcelValidErrors errors = new ExcelValidErrors();          Map<Integer, List<ReadRow<DemoData>>> group = readRows.getRows().stream()                 .collect(Collectors.groupingBy(item -> item.getData().getInteger()));          for (Map.Entry<Integer, List<ReadRow<DemoData>>> entry : group.entrySet()) {              if (entry.getValue().size() > 1) {                  for (ReadRow<DemoData> readRow : entry.getValue()) {                      errors.addError(new DefaultExcelObjectError(readRow.getRowIndex() + 1, "参数重复"));                 }             }         }         return errors;     }}</code></pre> <h2>校验结果接收</h2> <p>与 Spring MVC 设计类似，这里也提供了两种接收校验结果的方式。</p> <h3>异常捕获接收校验结果</h3> <p>开启校验后，如果校验结果中包含错误，会将错误信息封装到&nbsp;<code>ExcelValidException</code>&nbsp;，并抛出异常，可以通过全局异常捕获的方式收集错误信息。</p> <pre class="has"><code class="language-go">@RestControllerAdvicepublic class GlobalExceptionControllerAdvice {       @ExceptionHandler(ExcelValidException.class)     public String handleException(ExcelValidException e) {          ExcelValidErrors errors = e.getErrors();         return JSON.toJSONString(errors);     }}</code></pre> <h3>controller 方法参数接收校验结果</h3> <p>如果不想通过异常捕获的方式接收校验的错误信息，还可以将错误信息添加到&nbsp;<code>@ExcelParam</code>&nbsp;参数的后面，示例代码如下。</p> <pre class="has"><code class="language-go">@PostMapping("/list/obj")public List<DemoData> listObj(@ExcelParam @Validated List<DemoData> list, ExcelValidErrors errors) {      if (errors.hasErrors()) {          String messages = errors.getAllErrors().stream().map(ExcelValidObjectError::getMessage).collect(Collectors.joining(" | "));         throw new RuntimeException("发现异常:" + messages);     }     return list; }</code></pre> <p>easyexcel-spring-boot-starter 综合应用了前面文章介绍的各种 Spring 知识，代码量并不大，对实现感兴趣的小伙伴可自行查阅代码。由于这个框架是把 Excel 中所有的行数据收集到内存，因此只适合一些比较简单的场景。</p> <blockquote> <p>作者：大鹏cool</p> <p>  https://zzuhkp.blog.csdn.net/article/details/125097026</p> </blockquote> <pre class="has"><code class="language-go">公众号“Java精选”所发表内容注明来源的，版权归原出处所有（无法查证版权的或者未注明出处的均来自网络，系转载，转载的目的在于传递更多信息，版权属于原作者。如有侵权，请联系，笔者会第一时间删除处理！ 最近有很多人问，有没有读者交流群！加入方式很简单，公众号Java精选，回复“加群”，即可入群！  Java精选面试题（微信小程序）：3000+道面试题，包含Java基础、并发、JVM、线程、MQ系列、Redis、Spring系列、Elasticsearch、Docker、K8s、Flink、Spark、架构设计等，在线随时刷题！ ------ 特别推荐 ------ 特别推荐：专注分享最前沿的技术与资讯，为弯道超车做好准备及各种开源项目与高效率软件的公众号，「大咖笔记」，专注挖掘好东西，非常值得大家关注。点击下方公众号卡片关注。  点击“阅读原文”，了解更多精彩内容！文章有帮助的话，点在看，转发吧！</code></pre> </div></div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-2918.htm">Java中的抽象类与接口</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-2920.htm">C语言操作符详解</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7922.htm" title="动物打的疫苗 动物打的疫苗是什么">动物打的疫苗 动物打的疫苗是什么</a></li>
                        <li class="py-2"><a href="/html/category/article-7416.htm" title="领养宠物的协议（领养宠物协议有法律效力吗）">领养宠物的协议（领养宠物协议有法律效力吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7692.htm" title="平底锅有哪些比较好的品牌推荐(平底锅有哪些比较好的品牌呢)">平底锅有哪些比较好的品牌推荐(平底锅有哪些比较好的品牌呢)</a></li>
                        <li class="py-2"><a href="/html/category/article-7094.htm" title="属马养猫运气会变差吗（属马的能养猫咪吗）">属马养猫运气会变差吗（属马的能养猫咪吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6956.htm" title="宠物粮食市场前景如何分析出来的（宠物粮食利润大吗）">宠物粮食市场前景如何分析出来的（宠物粮食利润大吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7738.htm" title="一片片枫叶飘落下来像什么（一片片枫叶飘落好像）">一片片枫叶飘落下来像什么（一片片枫叶飘落好像）</a></li>
                        <li class="py-2"><a href="/html/category/article-7278.htm" title="动物疫苗上市公司有哪些企业名称和地址（动物疫苗的上市公司有哪些）">动物疫苗上市公司有哪些企业名称和地址（动物疫苗的上市公司有哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-6911.htm" title="无货源网店好干吗（无货源网店挣钱吗）">无货源网店好干吗（无货源网店挣钱吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7095.htm" title="广州宠物领养中心有哪些公司 广州宠物领养中心有哪些公司招聘">广州宠物领养中心有哪些公司 广州宠物领养中心有哪些公司招聘</a></li>
                        <li class="py-2"><a href="/html/category/article-6910.htm" title="动物诊疗机构管理规范（动物诊疗机构管理办法2021）">动物诊疗机构管理规范（动物诊疗机构管理办法2021）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>