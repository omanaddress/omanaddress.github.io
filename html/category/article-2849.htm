<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-2849.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解 - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li>一、LocalDate、LocalTime、Instant、Duration、Period</li> <li> <ul> <li>1、LocalDate和LocalTime</li> <li> <ul> <li>a、LocalDate</li> <li>b、LocalTime</li> </ul> </li> <li>2、合并时间和日期</li> <li>3、机器日期和时间格式</li> <li>4、定义Duration 和Period</li> </ul> </li> <li>二、操纵、解析和格式化日期</li> <li> <ul> <li>1、使用TemporalAdjuster</li> <li>2、打印输出及解析日期</li> <li> <ul> <li>a、格式化和解析日期java8提供了线程安全DateTimeFormatter类，创建格式化器最简单的方法时通过它的静态工厂方法及常量。</li> <li>b、按照某个模式创建DateTimeFormatter</li> <li>c、创建本地化的DateTimeFormatter</li> </ul> </li> </ul> </li> <li>三、处理不同时区</li> </ul> </li> </ul> </div> <blockquote> <p><strong>前言：java8之前我们创建时间new Date或者使用Calendar，很不幸这些类设计的有缺陷，导致使用这些方法写出的代码很容易出错。DateFormat是一个线程不安全的类，在多线程使用会有意想不到的结果出现。在java8中整合了很多Joda-Time的特性。</strong></p> </blockquote> <h2>一、LocalDate、LocalTime、Instant、Duration、Period</h2> <p>如果创建简单的时间和日期。java.time包提供了很多新类帮你解决问题，分别是LocalDate、LocalTime、Instant、Duration、Period实现的接口都是TemporalAccessor，这些类都是final类型的，都不能修改。</p> <h3>1、LocalDate和LocalTime</h3> <p>可以通过of的静态方法创建LocalDate和LocalTime实例。</p> <h4>a、LocalDate</h4> <pre><code>LocalDate date = LocalDate.of(2019, 9, 1); int year = date.getYear(); Month month = date.getMonth(); int day = date.getDayOfMonth(); DayOfWeek dow = date.getDayOfWeek(); int len = date.lengthOfMonth(); boolean leap = date.isLeapYear();</code></pre> <p>还可以通过工厂方法系统日期获取当前日期：</p> <pre><code>LocalDate today = LocalDate.now();</code></pre> <p>还可以传递一个TemporalField参数给get方法也可以拿到同样的信息。TemporalField是一个接口，ChronoField实现了这一接口。</p> <pre><code>int year = date.get(ChronoField.YEAR); int month = date.get(ChronoField.MONTH_OF_YEAR); int day = date.get(ChronoField.DAY_OF_MONTH);</code></pre> <h4>b、LocalTime</h4> <p>创建LocalTime也可以使用of静态方法</p> <pre><code>LocalTime time = LocalTime.of(15, 30, 20); int hour = time.getHour(); int minute = time.getMinute(); int second = time.getSecond();</code></pre> <p>LocalDate和LocalTime都可以使用parse方法将字符串解析为LocalDate或LocalTime</p> <pre><code>LocalDate date = LocalDate.parse("2019-09-01"); LocalTime time = LocalTime.parse("15:30:20");</code></pre> <h3>2、合并时间和日期</h3> <p>LocalDateTime是LocalDate和LocalTime的合体。它同时表示了日期和时间，但不带有时区信息。<br /> 可以使用atTime或atDate创建LocalDateTime</p> <pre><code> LocalDateTime dt1 = LocalDateTime.of(2019, 9, 1, 15, 45, 20);  LocalDate date = LocalDate.now();  LocalTime date1 = LocalTime.now();  LocalDateTime dt3 = date.atTime(15, 45, 20);  LocalDateTime dt5 = date1.atDate(date);</code></pre> <p>也可以使用toLocalDate或toLocalTime，从LocalDateTime提取LocalDate或LocalTime。</p> <pre><code>LocalDate date1 = dt1.toLocalDate(); LocalTime time1 = dt1.toLocalTime();</code></pre> <h3>3、机器日期和时间格式</h3> <p>今天是某年，某月，某日等等作为人我们可以看懂，但是作为机器是看不懂的。从机器角度看，建模时间最自然的格式是表示一个持续时间段上某个点的单一大整型数。这也是java.time.Instant类对时间建模的方式。基本上是以Unix元年时间(1970年1月1日)开始所经历秒数计算的。<br /> 可以使用静态工厂方式创建该实例</p> <pre><code>  Instant instant = Instant.ofEpochSecond(3);   Instant.ofEpochSecond(3,-1000000);//三秒之前的100w纳秒(1秒)     Instant.ofEpochSecond(3,1000000);//三秒之后的100w纳秒(1秒)</code></pre> <h3>4、定义Duration 和Period</h3> <p>需要创建Temporal对象之间的Duration (间隔)，Duration 类的静态工厂方法between就是为了这个目的设计的。</p> <pre><code>Duration d1 = Duration.between(time1, time2); Duration d1 = Duration.between(dateTime1, dateTime2); Duration d2 = Duration.between(instant1, instant2)</code></pre> <p>如果是需要以年，月，日的方式对多个时间建模，可以使用Period类。该类也有between方法。</p> <pre><code>Period tenDays = Period.between(LocalDate.of(2019, 3, 8), LocalDate.of(2019, 9, 1));</code></pre> <p>Duration 和Period提供了很多静态方法，可以直接创建对应的实例。</p> <pre><code>Duration threeMinutes = Duration.ofMinutes(3); Duration threeMinutes = Duration.of(3, ChronoUnit.MINUTES); Period tenDays = Period.ofDays(10); Period threeWeeks = Period.ofWeeks(3); Period twoYearsSixMonthsOneDay = Period.of(2, 6, 1);</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221105/0b50956263c2082414aefc4b750ee73c.jpg" alt="JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221105/93d0148c13dff913bf05cebb6858f408.jpg" alt="JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解"></p> <h2>二、操纵、解析和格式化日期</h2> <p>如果已经有了一个LocalDate对象，想要创建它的修改版本，最直接的方法使用withxxx()方法。withxxx()会创建一个对象的副本。</p> <pre><code>LocalDate date1 = LocalDate.of(2019, 1, 1); LocalDate date2 = date1.withYear(2011); LocalDate date3 = date2.withDayOfMonth(25); LocalDate date4 = date3.with(ChronoField.MONTH_OF_YEAR, 9);</code></pre> <p>还可以加上或者减去一段时间</p> <pre><code>LocalDate date1 = LocalDate.of(2019, 9, 1); LocalDate date2 = date1.plusWeeks(1); LocalDate date3 = date2.minusYears(3); LocalDate date4 = date3.plus(6, ChronoUnit.MONTHS);</code></pre> <p>LocalDate、LocalTime、LocalDateTIme、Instant都有大量的通用方法<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221105/cb17b867331a670eb18cc134c445de25.jpg" alt="JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解"></p> <h3>1、使用TemporalAdjuster</h3> <p>截止目前看到的日期比较都是相对比较直接的，有时候需要更加复杂的操作。比如，将日期调整到下个周日、下个工作日等。可以使用with的重载版本，向其传递一个更多定制化的TemporalAdjuster对象。</p> <pre><code>LocalDate date1 = LocalDate.of(2019, 9, 1); LocalDate date2 = date1.with(nextOrSame(DayOfWeek.SUNDAY)); LocalDate date3 = date2.with(lastDayOfMonth());</code></pre> <p>TemporalAdjuster的工厂方法列表</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221105/666568e50b32bcaff519cb3896d17098.jpg" alt="JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解"><br /> 如果没有符合你要求的预定义TemporalAdjuster，你可以创建自己的TemporalAdjuster</p> <pre><code>//函数式接口 @FunctionalInterface public interface TemporalAdjuster { 	Temporal adjustInto(Temporal temporal); }</code></pre> <p>例：计算明天的日期，同时过滤掉周六日</p> <pre><code>public class NextWorkingDay implements TemporalAdjuster {     @Override     public Temporal adjustInto(Temporal temporal) {         DayOfWeek dow =                 DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK));  //当前日期         int dayToAdd = 1;         if (dow == DayOfWeek.FRIDAY) dayToAdd = 3;         else if (dow == DayOfWeek.SATURDAY) dayToAdd = 2;         return temporal.plus(dayToAdd, ChronoUnit.DAYS);     } }</code></pre> <p>由于TemporalAdjuster是一个函数式接口你能以lambda方式想该adjuster接口传递行为</p> <pre><code>date = date.with(temporal -> { 	DayOfWeek dow = 	DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK)); 	int dayToAdd = 1; 	if (dow == DayOfWeek.FRIDAY) dayToAdd = 3; 	else if (dow == DayOfWeek.SATURDAY) dayToAdd = 2; 	return temporal.plus(dayToAdd, ChronoUnit.DAYS); });</code></pre> <p>如果你使用lambda方式定义TemporalAdjuster对象，推荐使用TemporalAdjusters的ofDateAdjuster方法</p> <pre><code>TemporalAdjuster nextWorkingDay = TemporalAdjusters.ofDateAdjuster( 	temporal -> { 	DayOfWeek dow = 	DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK)); 	int dayToAdd = 1; 	if (dow == DayOfWeek.FRIDAY) dayToAdd = 3; 	if (dow == DayOfWeek.SATURDAY) dayToAdd = 2; 	return temporal.plus(dayToAdd, ChronoUnit.DAYS); }); date = date.with(nextWorkingDay);</code></pre> <h3>2、打印输出及解析日期</h3> <h4>a、格式化和解析日期java8提供了线程安全DateTimeFormatter类，创建格式化器最简单的方法时通过它的静态工厂方法及常量。</h4> <p>下面例子，生成不同格式的字符串</p> <pre><code>LocalDate date = LocalDate.of(2019, 9, 1); String s1 = date.format(DateTimeFormatter.BASIC_ISO_DATE);//20190901 String s2 = date.format(DateTimeFormatter.ISO_LOCAL_DATE);//2019-09-01</code></pre> <p>可以用prase方法解析字符串</p> <pre><code>LocalDate date1 = LocalDate.parse("20190901", DateTimeFormatter.BASIC_ISO_DATE); LocalDate date2 = LocalDate.parse("2019-09-01", DateTimeFormatter.ISO_LOCAL_DATE);</code></pre> <h4>b、按照某个模式创建DateTimeFormatter</h4> <pre><code>DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy"); LocalDate date1 = LocalDate.of(2019, 9, 1); String formattedDate = date1.format(formatter); LocalDate date2 = LocalDate.parse(formattedDate, formatter);</code></pre> <h4>c、创建本地化的DateTimeFormatter</h4> <pre><code>DateTimeFormatter italianFormatter = DateTimeFormatter.ofPattern("d. MMMM yyyy", Locale.ITALIAN); LocalDate date1 = LocalDate.of(2019, 3, 1); String formattedDate = date.format(italianFormatter); // 1. marzo 2019 LocalDate date2 = LocalDate.parse(formattedDate, italianFormatter);</code></pre> <h2>三、处理不同时区</h2> <p>时区的处理是新版日期和时间API新增的功能。新的java.time.ZoneId替代了老版的java.util.TimeZone。<br /> 例：</p> <pre><code>ZoneId romeZone = ZoneId.of("Europe/Rome");//"区域/城市"</code></pre> <p>toZoneId可以将老时区对象转换为ZoneId</p> <pre><code>ZoneId zoneId = TimeZone.getDefault().toZoneId();</code></pre> <p>为时间点添加区域</p> <pre><code>LocalDate date = LocalDate.of(2014, Month.MARCH, 18); ZonedDateTime zdt1 = date.atStartOfDay(romeZone); LocalDateTime dateTime = LocalDateTime.of(2014, Month.MARCH, 18, 13, 45); ZonedDateTime zdt2 = dateTime.atZone(romeZone); Instant instant = Instant.now(); ZonedDateTime zdt3 = instant.atZone(romeZone);</code></pre> <p><strong>下面这张图可以更好的让我我们理解LocalDate、LocalTime、LocalDateTime、ZonedDateTime</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221105/0b4ad7d7b739fcd647453ade63c7d0c7.jpg" alt="JAVA8 日期和时间(LocalDate、LocalDateTime、ZoneId、Duration、Period、Instant)API 用法详解"><br /> 通过ZoneId可以将LocalDateTime转换为Instant</p> <pre><code>LocalDateTime dateTime = LocalDateTime.of(2014, Month.MARCH, 18, 13, 45); Instant instantFromDateTime = dateTime.toInstant(romeZone);</code></pre> <p>反之也可以转换为LocalDateTime</p> <pre><code>Instant instant = Instant.now(); LocalDateTime timeFromInstant = LocalDateTime.ofInstant(instant, romeZone);</code></pre> <p><strong>LocalDateTime和Date转换实例</strong></p> <pre><code>  public static void dateToCoverLocadate() {         Date date = new Date();         Instant instant = date.toInstant();         ZoneId zoneId = ZoneId.systemDefault();         LocalDateTime localDateTime = LocalDateTime.ofInstant(instant, zoneId);         System.out.println(localDateTime);     }       public static void LocaldateToCoverDate() {         LocalDateTime now = LocalDateTime.now();         ZoneId zoneId = ZoneId.systemDefault();         Instant instant = now.atZone(zoneId).toInstant();         Date from = Date.from(instant);         System.out.println(from);     }</code></pre> </div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-2848.htm">pytorch定义新的自动求导函数</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-2850.htm">TS和JS的一些区别</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7140.htm" title="猫粮机器怎么做猫粮的视频（猫粮机器怎么做猫粮的视频讲解）">猫粮机器怎么做猫粮的视频（猫粮机器怎么做猫粮的视频讲解）</a></li>
                        <li class="py-2"><a href="/html/category/article-4569.htm" title="宠物粮食店一年利润怎么样啊多少钱一个月 宠物粮食店一年利润怎么样啊多少钱一个月工资">宠物粮食店一年利润怎么样啊多少钱一个月 宠物粮食店一年利润怎么样啊多少钱一个月工资</a></li>
                        <li class="py-2"><a href="/html/category/article-4534.htm" title="鱼子怎么做最好吃?(鱼子怎么做简单又好吃视频)">鱼子怎么做最好吃?(鱼子怎么做简单又好吃视频)</a></li>
                        <li class="py-2"><a href="/html/category/article-7279.htm" title="到哪领养狗（到哪领养狗狗）">到哪领养狗（到哪领养狗狗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6773.htm" title="动物疫苗对人体有害吗知乎文章（动物疫苗对人体有害吗知乎文章内容）">动物疫苗对人体有害吗知乎文章（动物疫苗对人体有害吗知乎文章内容）</a></li>
                        <li class="py-2"><a href="/html/category/article-5974.htm" title="家猫养多久才能养熟（家猫养多久可以放出去）">家猫养多久才能养熟（家猫养多久可以放出去）</a></li>
                        <li class="py-2"><a href="/html/category/article-4423.htm" title="宠物养不了该送哪里去苏州（宠物养不了了怎么办）">宠物养不了该送哪里去苏州（宠物养不了了怎么办）</a></li>
                        <li class="py-2"><a href="/html/category/article-6818.htm" title="妙三多疫苗间隔多久打一针最好（妙三多疫苗间隔多久打一针最好呢）">妙三多疫苗间隔多久打一针最好（妙三多疫苗间隔多久打一针最好呢）</a></li>
                        <li class="py-2"><a href="/html/category/article-6864.htm" title="宠物商品品牌定位（宠物商品品牌定位策略）">宠物商品品牌定位（宠物商品品牌定位策略）</a></li>
                        <li class="py-2"><a href="/html/category/article-6957.htm" title="宠物医生需要什么学历和专业（宠物医生需要什么学历和专业的）">宠物医生需要什么学历和专业（宠物医生需要什么学历和专业的）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>