<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-2864.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="htmledit_views"> <p>celery不能以守护进程方式运行自己，需要使用下面的工具：</p> <p><span style="font-size:14px; color:#ff0000"><strong>通用的初始化脚本&nbsp;</strong></span></p> <p>脚本代码:<a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/generic-init.d/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px" rel="nofollow">extra/generic-init.d/</a><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px">&nbsp;</span></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"><span style="font-size:10px">这个目录包含了celery worker程序通用的初始化脚本，这些脚本应该运行在Linux,FreeBSD,OpenBSD和其它类UNIX平台。</span></span></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"><span style="font-size:10px"><br /></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>初始化脚本:celeryd</strong></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="color:#cc33cc"><strong>使用方法：</strong></span><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"><em>/etc/init.d/celeryd {start|stop|restart|status}</em></span></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><strong><span style="color:#cc33cc">配置文件:</span></strong><span style="color:rgb(62,67,73); font-family:monospace; font-size:17px">/etc/default/celeryd</span></span></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><span style="font-family:monospace">要配置这个脚本能够正常运行你的worker,你至少需要配置worker启动后需要使用的目录（查找包含app的模块和你的配置模块）。</span></span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">worker守护化的配置脚本为/etc/default/celeryd,这是一个shell脚本。你可以为这个脚本添加环境变量和配置选项。添加了环境变量之后，你必须export它们(比如 export DISPLAY=":0")。</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><br /></span></span></p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>需要管理员权限</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">初始化脚本和配置脚本必须使用root用户。</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">权限不足的用户不能够使用初始化脚本，他们可以使用celery multi工具（或者celery worker --detach）。</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"></span></span></p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="gp" style="color:rgb(198,93,9); font-weight:bold">$</span> celery multi start worker1 <span class="se" style="color:rgb(102,102,102); font-weight:bold; background-color:rgb(255,240,240)">\</span> <span class="go" style="color:rgb(136,136,136)">    -A proj \</span> <span class="go" style="color:rgb(136,136,136)">    --pidfile="$HOME/run/celery/%n.pid" \</span> <span class="go" style="color:rgb(136,136,136)">    --logfile="$HOME/log/celery/%n%I.log"</span>  <span class="gp" style="color:rgb(198,93,9); font-weight:bold">$</span> celery multi restart worker1 <span class="se" style="color:rgb(102,102,102); font-weight:bold; background-color:rgb(255,240,240)">\</span> <span class="go" style="color:rgb(136,136,136)">    -A proj \</span> <span class="go" style="color:rgb(136,136,136)">    --logfile="$HOME/log/celery/%n%I.log" \</span> <span class="go" style="color:rgb(136,136,136)">    --pidfile="$HOME/run/celery/%n.pid</span>  <span class="gp" style="color:rgb(198,93,9); font-weight:bold">$</span> celery multi stopwait worker1 --pidfile<span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"</span><span class="nv" style="color:rgb(153,102,51)">$HOME</span><span class="s2" style="background-color:rgb(255,240,240)">/run/celery/%n.pid"</span></pre> <p> </p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>配置举例</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">这是一个python工程的配置举例</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">/etc/default/celeryd</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background-color:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Names of nodes to start</span> <span class="c1" style="color:rgb(136,136,136)">#   most people will only start one node:</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_NODES</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"worker1"</span> <span class="c1" style="color:rgb(136,136,136)">#   but you can also start multiple and configure settings</span> <span class="c1" style="color:rgb(136,136,136)">#   for each in CELERYD_OPTS (see `celery multi --help` for examples):</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES="worker1 worker2 worker3"</span> <span class="c1" style="color:rgb(136,136,136)">#   alternatively, you can specify the number of nodes to start:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES=10</span>  <span class="c1" style="color:rgb(136,136,136)"># Absolute or relative path to the 'celery' command:</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/usr/local/bin/celery"</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_BIN="/virtualenvs/def/bin/celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># App instance to use</span> <span class="c1" style="color:rgb(136,136,136)"># comment out this line if you don't use an app</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_APP</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"proj"</span> <span class="c1" style="color:rgb(136,136,136)"># or fully qualified:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_APP="proj.tasks:app"</span>  <span class="c1" style="color:rgb(136,136,136)"># Where to chdir at start.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_CHDIR</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/Myproject/"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra command-line arguments to the worker</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--time-limit=300 --concurrency=8"</span>  <span class="c1" style="color:rgb(136,136,136)"># Set logging level to DEBUG</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_LOG_LEVEL="DEBUG"</span>  <span class="c1" style="color:rgb(136,136,136)"># %n will be replaced with the first part of the nodename.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_LOG_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/log/celery/%n%I.log"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_PID_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/run/celery/%n.pid"</span>  <span class="c1" style="color:rgb(136,136,136)"># Workers should run as an unprivileged user.</span> <span class="c1" style="color:rgb(136,136,136)">#   You need to create this user manually (or you can choose</span> <span class="c1" style="color:rgb(136,136,136)">#   a user/group combination that already exists, e.g. nobody).</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_USER</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"celery"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_GROUP</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># If enabled pid and log directories will be created if missing,</span> <span class="c1" style="color:rgb(136,136,136)"># and owned by the userid/group configured.</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_CREATE_DIRS</span><span class="o" style="color:rgb(51,51,51)">=</span>1</pre> <p><span style="font-size:14px; color:#ff0000"><strong>使用登陆shell</strong></span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">你可以通过使用登陆shell来继承CELERYD_USER环境变量。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; font-weight:bold; color:rgb(62,67,73); overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; background-color:rgb(240,255,235)"><span class="nv" style="color:rgb(153,102,51)">CELERYD_SU_ARGS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"-l"</span></pre> <p><span style="font-size:10px">注意，并不建议这样使用，只有当必须这样做时再这样使用。</span> </p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px"><br /></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:14px; color:#ff0000"><strong>Django配置举例</strong></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">Django用户现在可以使用上面示例的模版，但是要确保定义celery app实例的模块也为<code class="xref std std-envvar docutils literal" style="text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px; font-weight:bold; background-color:transparent"><span class="pre"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://django.readthedocs.org/en/latest/topics/settings.html#envvar-DJANGO_SETTINGS_MODULE"  title="(in Django v1.11)" style="font-size:17px; color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px" rel="nofollow">DJANGO_SETTINGS_MODULE</a>设置</span></code>了一个默认值，可以参考:<span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px">&nbsp;</span><a target="_blank" class="reference internal" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/django/first-steps-with-django.html#django-first-steps"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px" rel="nofollow"><span class="std std-ref">First steps with Django</span></a><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px">.</span></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px"><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px"><br /></span></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:14px; color:#ff0000"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"><strong>可用的选项</strong></span></span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_APP</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">使用的app实例(app参数的值).如果你还在使用老的API或者django-celery,你可以省略这个配置。</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_BIN</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">celery程序的绝对或者相对路径.比如:</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"></span></span></span></p> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px; color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px"> <li style="line-height:1.4em"><code class="file docutils literal">celery</code></li> <li style="line-height:1.4em"><code class="file docutils literal">/usr/local/bin/celery</code></li> <li style="line-height:1.4em"><code class="file docutils literal">/virtualenvs/proj/bin/celery</code></li> <li style="line-height:1.4em"><code class="file docutils literal"><span class="pre">/virtualenvs/proj/bin/python</span>&nbsp;<span class="pre">-m</span>&nbsp;<span class="pre">celery</span></code></li> </ul> <p> CELERY_NODES </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">启动的节点列表（以空格分隔）</span></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">CELERY_OPTS</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">worker的其它命令行参数，通过celery -help查看参数列表。这个选项还支持multi的扩展语法用来配置私有节点的配置。通过celery multi --help来查看多节点的的配置举例。</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">CELERY_CHDIR</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">启动后改变到的目录，默认为当前目录。</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px"><span style="font-size:14px">CELERYD_PID_FILE</span></span><br /></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px">PID文件的全路径，默认为/var/run/celery/%n.pid</span></span></span></p> <p><span style="font-family:monospace; font-size:12px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_LOG_FILE</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">worker日志文件的全路径。默认为/var/log/celery/%n%I.log.注意：使用%I是重要的，因为prefork池中的多个进程如果使用相同的日志文件将会产生竞争。</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">CELERY_LOG_LEVEL</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">worker的日志级别，默认为INFO</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYD_USER</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行worker的用户，默认为当前用户</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYD_GROUP</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行worker的组，默认为当前组</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_DIRS</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建目录（日志目录和pid文件目录）。默认只在指定了logfile/pidfile时创建目录。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_RUNDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建pidfile目录，默认只在指定了pidfile位置时创建。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_LOGDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建logfile目录，默认只在指定logfile位置时创建。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><br /></span></span></p> <p><span style="font-family:monospace; color:#ff0000"><span style="line-height:23.8px"><strong>初始化脚本：celerybeat</strong></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif"><span style="font-size:10px"><span style="color:#cc33cc"><strong>使用方法:&nbsp;</strong></span></span></p> <p></span> </p> <table class="docutils field-list" style="font-size:17px; color:rgb(62,67,73); border:none; border-collapse:collapse; font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"> <tbody> <tr class="field-odd field"> <td class="field-body" style="padding:0px; border:1px solid rgb(136,136,136)"><cite>/etc/init.d/celerybeat {start|stop|restart}</cite></td> </tr> </tbody> </table> <p><span style="color:#cc33cc"><strong><br /> 配置文件:</strong></span></p> <table class="docutils field-list" style="border:none; border-collapse:collapse; color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"> <tbody> <tr class="field-even field"> <td class="field-body" style="padding:0px; border:1px solid rgb(136,136,136)"> <code class="file docutils literal">/etc/default/celerybeat</code>&nbsp;or&nbsp;<code class="file docutils literal">/etc/default/celeryd</code> </td> </tr> </tbody> </table> <p><span style="font-size:14px; color:#ff0000"><strong>配置举例：</strong></span></p> <p>这是一个python工程的配置举例</p> <p>/etc/default/celerybeat</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Absolute or relative path to the 'celery' command:</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/usr/local/bin/celery"</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_BIN="/virtualenvs/def/bin/celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># App instance to use</span> <span class="c1" style="color:rgb(136,136,136)"># comment out this line if you don't use an app</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_APP</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"proj"</span> <span class="c1" style="color:rgb(136,136,136)"># or fully qualified:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_APP="proj.tasks:app"</span>  <span class="c1" style="color:rgb(136,136,136)"># Where to chdir at start.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYBEAT_CHDIR</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/Myproject/"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra arguments to celerybeat</span> <span class="nv" style="color:rgb(153,102,51)">CELERYBEAT_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--schedule=/var/run/celery/celerybeat-schedule"</span></pre> <p><span style="font-size:14px; color:#ff0000"><strong>Django配置举例</strong></span><br /> <br /> 你需要使用上面的配置模版，但是要保证DJANGO_SETTINGS_MODULE变量已经设置（而且export）,还有CELERYD_CHDIR在工程目录设置： </p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="nb" style="color:rgb(0,112,32)">export</span> <span class="nv" style="color:rgb(153,102,51)">DJANGO_SETTINGS_MODULE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"settings"</span>  <span class="nv" style="color:rgb(153,102,51)">CELERYD_CHDIR</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/MyProject"</span></pre> <p><span style="font-size:14px; color:#ff0000"><strong>可用的选项</strong></span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_APP</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">使用的app实例(app参数的值).</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERYBEAT_OPTS</span></span></span></p> <p>celery beat的附加参数，通过celery beat --help查看完整的选项列表.</p> <p></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px"><span style="font-size:14px">CELERYBEAT_PID_FILE</span></span><br /></span></span></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px">PID文件的全路径，默认为/var/run/celeryd.pid</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERYBEAT_LOG_FILE</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">日志文件的全路径。默认为/var/log/celeryd.log.</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">CELERYBEAT_LOG_LEVEL</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">日志级别，默认为INFO</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYBEAT_USER</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行beat的用户，默认为当前用户</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYBEAT_GROUP</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行beat的组，默认为当前组</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_DIRS</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建目录（日志目录和pid文件目录）。默认只在指定了logfile/pidfile时创建目录。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_RUNDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建pidfile目录，默认只在指定了pidfile位置时创建。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_LOGDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建logfile目录，默认只在指定logfile位置时创建。</span></span></p> <p></p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>问题排查</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">如果你不能让初始化脚本正常运行，你可以尝试以详细模式来运行:</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; font-weight:bold; color:rgb(62,67,73); overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; background-color:rgb(240,255,235)"><span class="gp" style="color:rgb(198,93,9); font-weight:bold">#</span> sh -x /etc/init.d/celeryd start</pre> <p><span style="font-size:10px">这会显示一些为什么不能运行的的提示信息</span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">如果worker启动时显示ok，但是很快就退出了，这样日志文件中不会有任何信息，可能启动过程中有错误。但是以守护进程方式运行时，标准输出被关闭了，你就看不到任何信息了。如果遇到这种情况，你可以使用C_FAKEFORK环境变量来跳过守护进程方式：</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; font-weight:bold; color:rgb(62,67,73); overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; background-color:rgb(240,255,235)"><span class="gp" style="color:rgb(198,93,9); font-weight:bold">#</span> <span class="nv" style="color:rgb(153,102,51)">C_FAKEFORK</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="m" style="color:rgb(102,0,238); font-weight:bold">1</span> sh -x /etc/init.d/celeryd start</pre> <p><span style="font-size:10px">这样你就可以看到错误了。</span> </p> <p><span style="font-size:10px; font-family:monospace; line-height:23.8px">通常情况下，错误是由于读或者写文件权限不足造成的，也有可能是配置模块，用户模块或者第三库中有语法错误，甚至是celery自身的错误（如果你发现了bug,请报告它)<br /></span></p> <p><span style="font-size:10px; font-family:monospace; line-height:23.8px"><br /></span></p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>使用systemd</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"></span></span></p> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px; color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"> <li style="line-height:1.4em"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/systemd/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">extra/systemd/</a></li> </ul> <p><span style="color:#cc33cc"><strong>使用方法:</strong></span><br /> <span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"><em>systemctl {start|stop|restart|status} celery.service</em></span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><span style="color:#cc33cc"><strong>配置文件:</strong></span><br /></span></span></span> </p> <table class="docutils field-list" id="generic-systemd-celery" style="font-style:italic; font-size:17px; color:rgb(62,67,73); border:none; border-collapse:collapse; font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"> <tbody> <tr class="field-even field"> <td class="field-body" style="padding:0px; border:1px solid rgb(136,136,136)">/etc/conf.d/celery</td> </tr> </tbody> </table> <p></p> <p><span style="color:#cc33cc"><strong>服务文件:</strong></span>celery.service</p> <p>这是一个systemd文件的举例:</p> <p>/etc/systemd/system/celery.service:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="o" style="color:rgb(51,51,51)">[</span>Unit<span class="o" style="color:rgb(51,51,51)">]</span> <span class="nv" style="color:rgb(153,102,51)">Description</span><span class="o" style="color:rgb(51,51,51)">=</span>Celery Service <span class="nv" style="color:rgb(153,102,51)">After</span><span class="o" style="color:rgb(51,51,51)">=</span>network.target  <span class="o" style="color:rgb(51,51,51)">[</span>Service<span class="o" style="color:rgb(51,51,51)">]</span> <span class="nv" style="color:rgb(153,102,51)">Type</span><span class="o" style="color:rgb(51,51,51)">=</span>forking <span class="nv" style="color:rgb(153,102,51)">User</span><span class="o" style="color:rgb(51,51,51)">=</span>celery <span class="nv" style="color:rgb(153,102,51)">Group</span><span class="o" style="color:rgb(51,51,51)">=</span>celery <span class="nv" style="color:rgb(153,102,51)">EnvironmentFile</span><span class="o" style="color:rgb(51,51,51)">=</span>-/etc/conf.d/celery <span class="nv" style="color:rgb(153,102,51)">WorkingDirectory</span><span class="o" style="color:rgb(51,51,51)">=</span>/opt/celery <span class="nv" style="color:rgb(153,102,51)">ExecStart</span><span class="o" style="color:rgb(51,51,51)">=</span>/bin/sh <span class="s1" style="background-color:rgb(255,240,240)">'${CELERY_BIN} multi start $CELERYD_NODES \</span> <span class="s1" style="background-color:rgb(255,240,240)">  -A $CELERY_APP --logfile=${CELERYD_LOG_FILE} \</span> <span class="s1" style="background-color:rgb(255,240,240)">  --pidfile=${CELERYD_PID_FILE} $CELERYD_OPTS'</span> <span class="nv" style="color:rgb(153,102,51)">ExecStop</span><span class="o" style="color:rgb(51,51,51)">=</span>/bin/sh <span class="s1" style="background-color:rgb(255,240,240)">'${CELERY_BIN} multi stopwait $CELERYD_NODES \</span> <span class="s1" style="background-color:rgb(255,240,240)">  --pidfile=${CELERYD_PID_FILE}'</span> <span class="nv" style="color:rgb(153,102,51)">ExecReload</span><span class="o" style="color:rgb(51,51,51)">=</span>/bin/sh <span class="s1" style="background-color:rgb(255,240,240)">'${CELERY_BIN} multi restart $CELERYD_NODES \</span> <span class="s1" style="background-color:rgb(255,240,240)">  -A $CELERY_APP --pidfile=${CELERYD_PID_FILE} --logfile=${CELERYD_LOG_FILE} \</span> <span class="s1" style="background-color:rgb(255,240,240)">  --loglevel="${CELERYD_LOG_LEVEL}" $CELERYD_OPTS'</span>  <span class="o" style="color:rgb(51,51,51)">[</span>Install<span class="o" style="color:rgb(51,51,51)">]</span> <span class="nv" style="color:rgb(153,102,51)">WantedBy</span><span class="o" style="color:rgb(51,51,51)">=</span>multi-user.target</pre> <p> 当你将上面的文件放到/etc/systemd/system目录后，你需要运行systemctl daemon-reload来让systemd识别这个文件。在你修改了这个文件后，你也需要重新运行这个命令。 </p> <p>要配置用户，组,chdir等配置，请修改配置文件中的User,Group,WorkingDirectory选项。</p> <p>你还可以使用systemd-tmpfiles来创建工作目录（用于日志和pid）</p> <p>文件:/etc/tmpfiles.d/celery.conf:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)">d /var/run/celery <span class="m" style="color:rgb(102,0,238); font-weight:bold">0755</span> celery celery - d /var/log/celery <span class="m" style="color:rgb(102,0,238); font-weight:bold">0755</span> celery celery -</pre> <p> </p> <p><span style="font-size:14px; color:#ff0000"><strong>配置举例</strong></span></p> <p>下面是一个python工程的配置举例</p> <p>/etc/conf.d/celery:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Name of nodes to start</span> <span class="c1" style="color:rgb(136,136,136)"># here we have a single node</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_NODES</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"w1"</span> <span class="c1" style="color:rgb(136,136,136)"># or we could have three nodes:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES="w1 w2 w3"</span>  <span class="c1" style="color:rgb(136,136,136)"># Absolute or relative path to the 'celery' command:</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/usr/local/bin/celery"</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_BIN="/virtualenvs/def/bin/celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># How to call manage.py</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_MULTI</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"multi"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra command-line arguments to the worker</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--time-limit=300 --concurrency=8"</span>  <span class="c1" style="color:rgb(136,136,136)"># - %n will be replaced with the first part of the nodename.</span> <span class="c1" style="color:rgb(136,136,136)"># - %I will be replaced with the current child process index</span> <span class="c1" style="color:rgb(136,136,136)">#   and is important when using the prefork pool to avoid race conditions.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_LOG_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/log/celery/%n%I.log"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_PID_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/run/celery/%n.pid"</span></pre> <p><span style="font-size:14px; color:#ff0000"><strong>Django配置举例</strong></span> </p> <p>下面是一个使用django-celery的配置举例:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Name of nodes to start</span> <span class="c1" style="color:rgb(136,136,136)"># here we have a single node</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_NODES</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"w1"</span> <span class="c1" style="color:rgb(136,136,136)"># or we could have three nodes:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES="w1 w2 w3"</span>  <span class="c1" style="color:rgb(136,136,136)"># Absolute path to "manage.py"</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/Myproject/manage.py"</span>  <span class="c1" style="color:rgb(136,136,136)"># How to call manage.py</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_MULTI</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"celery multi"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra command-line arguments to the worker</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--time-limit=300 --concurrency=8"</span>  <span class="c1" style="color:rgb(136,136,136)"># - %n will be replaced with the first part of the nodename.</span> <span class="c1" style="color:rgb(136,136,136)"># - %I will be replaced with the current child process index</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_LOG_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/log/celery/%n%I.log"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_PID_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/run/celery/%n.pid"</span></pre> <p> 通过在celery.services里使用环境变量来添加类似DJANGO_SETTINGS_MODULE的环境变量。 </p> <p><span style="font-size:14px; color:#ff0000"><strong><br /></strong></span></p> <p><span style="font-size:14px; color:#ff0000"><strong>以超级用户(root)身份运行worker:</strong></span></p> <p>以超级用户身份运行worker是一个非常危险的举动。总会有一种解决方案来避免使用root。Celery在用pickle作消息序列化时可能运行任意的代码----------这很危险，尤其是用root用户时。</p> <p>默认情况下,celery不会用root用户运行worker.相关的错误信息在日志可能不可见，除非你使用了C_FAKEFORK。</p> <p>使用C_FORCE_ROOT来强制celery使用root用户来运行worker。</p> <p>当使用C_FORCE_ROOT来运行worker时，可能会出现"OK"后直接退出且没有任何错误的情况。这可能是由于不经意间使用root用户运行工程在一个新的开发环境或者生产环境。</p> <div class="section" id="supervisor" style="color:rgb(62,67,73); font-size:17px; font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"> <h2 style="font-family:Futura,'Trebuchet MS',Arial,sans-serif; font-weight:normal; margin:30px 0px 10px; padding:0px; font-size:30.6px"> <a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pypi.python.org/pypi/supervisor/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">supervisor</a><a target="_blank" class="headerlink" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#supervisor"  title="Permalink to this headline" style="color:rgb(221,221,221); text-decoration:none; visibility:hidden; padding:0px 4px" rel="nofollow"></a><br /> </h2> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px"> <li style="line-height:1.4em"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/supervisord/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">extra/supervisord/</a></li> </ul> </div> <div class="section" id="launchd-os-x" style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px">  <span id="daemon-launchd"></span> </p> <h2 style="font-family:Futura,'Trebuchet MS',Arial,sans-serif; font-weight:normal; margin:30px 0px 10px; padding:0px; font-size:30.6px"> <a target="_blank" class="toc-backref" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#id23"  style="text-decoration:none" rel="nofollow"><code class="docutils literal" style="font-weight:bold; background-color:transparent"><span class="pre">launchd</span></code>&nbsp;(OS X)</a><a target="_blank" class="headerlink" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#launchd-os-x"  title="Permalink to this headline" style="color:rgb(221,221,221); text-decoration:none; visibility:hidden; padding:0px 4px" rel="nofollow"></a><br /> </h2> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px"> <li style="line-height:1.4em"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/osx/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">extra/osx</a></li> </ul> </div> <div class="section" id="windows" style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px">  <span id="daemon-windows"></span> </p> <h2 style="font-family:Futura,'Trebuchet MS',Arial,sans-serif; font-weight:normal; margin:30px 0px 10px; padding:0px; font-size:30.6px"> <a target="_blank" class="toc-backref" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#id24"  style="text-decoration:none" rel="nofollow">Windows</a><br /> </h2> </div> <p> 下面有一个非常好的外部教程: </p> <p><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.calazan.com/windows-tip-run-applications-in-the-background-using-task-scheduler/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px" rel="nofollow">http://www.calazan.com/windows-tip-run-applications-in-the-background-using-task-scheduler/</a></p> <div style="top:2370px">   </div> </p></div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-2863.htm">pip 查看要安装的包所有版本（所有包版本）</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-2865.htm">Vant indexBar 索引栏用法和搜索条件的功能</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3113.htm" title="java计算器页面的实现">java计算器页面的实现</a></li>
                        <li class="py-2"><a href="/html/category/article-3083.htm" title="kafka消费者执行异常重复消费_Kafka消费者的使用和原理">kafka消费者执行异常重复消费_Kafka消费者的使用和原理</a></li>
                        <li class="py-2"><a href="/html/category/article-3071.htm" title="springboot中emoji表情配置及springboot数据源配置区别">springboot中emoji表情配置及springboot数据源配置区别</a></li>
                        <li class="py-2"><a href="/html/category/article-3106.htm" title="我们如何使用单个MySQL UPDATE语句更新多行上的列值？">我们如何使用单个MySQL UPDATE语句更新多行上的列值？</a></li>
                        <li class="py-2"><a href="/html/category/article-3090.htm" title="Uniapp实现自定义组件">Uniapp实现自定义组件</a></li>
                        <li class="py-2"><a href="/html/category/article-3112.htm" title="30秒急速配置mybatis-plus多租户配置">30秒急速配置mybatis-plus多租户配置</a></li>
                        <li class="py-2"><a href="/html/category/article-3091.htm" title="进程,内核线程,用户线程,协程,纤程&#8230;&#8230;操作系统世界观">进程,内核线程,用户线程,协程,纤程&#8230;&#8230;操作系统世界观</a></li>
                        <li class="py-2"><a href="/html/category/article-3109.htm" title="C++内存泄漏的定位方法总结">C++内存泄漏的定位方法总结</a></li>
                        <li class="py-2"><a href="/html/category/article-3089.htm" title="SpringMVC中RequestMapping注解【作用、出现的位置、属性】">SpringMVC中RequestMapping注解【作用、出现的位置、属性】</a></li>
                        <li class="py-2"><a href="/html/category/article-3107.htm" title="Netty之非阻塞处理">Netty之非阻塞处理</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">50</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>