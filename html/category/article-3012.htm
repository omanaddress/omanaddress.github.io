<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-3012.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>Vue3 学习笔记&#8211;组合式 API - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">Vue3 学习笔记&#8211;组合式 API</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="htmledit_views"> <p>先来介绍一下 Mixin</p> <h1>1、Mixin</h1> <p><span style="color:#ff9900;"><strong>Mixin</strong></span> 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能</p> <p>一个 <span style="color:#ff9900;"><strong>mixin</strong></span> 对象可以包含任意组件选项</p> <p>当组件使用 <span style="color:#ff9900;"><strong>mixin</strong></span> 对象时，所有 <span style="color:#ff9900;"><strong>mixin</strong></span> 对象的选项将被&nbsp;<strong>混合&nbsp;</strong>进入该组件本身的选项</p> <pre><code class="language-javascript">// define a mixin object const myMixin = {   created() {     this.hello()   },   methods: {     hello() {       console.log('hello from mixin!')     }   } }  // define an app that uses this mixin const app = Vue.createApp({   mixins: [myMixin] })  app.mount('#mixins-basic') // =&gt; "hello from mixin!"</code></pre> <h2>1.1 合并规则</h2> <p><span style="color:#a2e043;"><strong>data 函数</strong></span></p> <p style="text-align:center;"><img fetchpriority="high" decoding="async" alt="" height="488" src="http://img.555519.xyz/uploads/20221230/78a16482cc8ce4e91da0c2a08561152b.jpg"></p> <p><span style="color:#a2e043;"><strong>&nbsp;钩子函数</strong></span></p> <p style="text-align:center;"><img decoding="async" alt="" height="364" src="http://img.555519.xyz/uploads/20221230/e9ea76b43b5267d960dd3f0d2f8c32c1.jpg"></p> <p><span style="color:#a2e043;"><strong>值为对象的选项，例如 methods、components</strong></span></p> <p style="text-align:center;"><img decoding="async" alt="" height="542" src="http://img.555519.xyz/uploads/20221230/c4bfa79f8231a36933a8c5aab8549fb1.jpg"></p> <h2>1.2 全局 mixin</h2> <p>一旦使用全局 mixin，它将影响每一个之后创建的组件</p> <pre><code class="language-javascript">const app = Vue.createApp({   myOption: 'hello!' })  // 为自定义的选项 'myOption' 注入一个处理器 app.mixin({   created() {     const myOption = this.$options.myOption     if (myOption) {       console.log(myOption)     }   } })  app.mount('#mixins-global') // =&gt; "hello!"</code></pre> <p><strong>和 mixin 有些类似的是 extends</strong></p> <hr/> <h1>2、组合式 API</h1> <p>先来说说 <span style="color:#a2e043;"><strong>Options API</strong></span></p> <p><span style="color:#a2e043;"><strong>Options API </strong></span><span style="color:#494949;">的特点是在对应的属性中编写对应的功能模块</span></p> <p><span style="color:#494949;">比如：在 methods 中定义方法，在 computed 中定义计算属性</span></p> <p>缺点是：</p> <p>实现某一个功能时，该功能对应的代码逻辑会被&nbsp;<strong>拆分&nbsp;</strong>到各个属性中</p> <p>然而，当我们的组件变得更大、更复杂的时候，我们需要实现的功能也就越多</p> <p>每一个功能对应的代码逻辑都被拆的很分散，<strong>代码碎片化</strong></p> <p>这是&nbsp;<strong>不方便&nbsp;</strong>我们的去&nbsp;<strong>理解和维护&nbsp;</strong>这个组件的</p> <p><span style="color:#494949;">因此，在 Vue 组件中，我们可以在 </span><span style="color:#ff9900;"><strong>setup</strong></span><span style="color:#494949;"> 中使用组合式 API，来解决上述问题</span></p> <p><span style="color:#fe2c24;">注意：在 setup 中，我们应该避免使用 this</span></p> <h2>2.1 setup 组件选项</h2> <p>使用 setup 函数时，它将接受两个参数：</p> <ol> <li><span style="color:#a2e043;"><strong>props</strong></span></li> <li><span style="color:#a2e043;"><strong>context</strong></span></li> </ol> <h3>2.1.1 Props</h3> <p>对于 props 的相关内容，跟之前讲述的是一样的</p> <pre><code class="language-javascript">// MyBook.vue  export default {   props: {     title: String   },   setup(props) {     console.log(props.title)   } }</code></pre> <h3>2.1.2 Context</h3> <p>里面包含三个属性：</p> <ul> <li><span style="color:#a2e043;"><strong>attrs</strong></span></li> <li><span style="color:#a2e043;"><strong>slots</strong></span></li> <li><span style="color:#a2e043;"><strong>emit</strong></span></li> </ul> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="348" src="http://img.555519.xyz/uploads/20221230/3aba83e9055ee7372df4f5f34f62c329.jpg"></p> <h3>&nbsp;2.1.3 结合模板使用</h3> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="556" src="http://img.555519.xyz/uploads/20221230/a9b15bca37f7ec4ae5fe9786332b79ba.jpg"></p> <hr/> <h1>3、响应性&nbsp;API</h1> <p>包含以下部分：</p> <ul> <li>响应性基础 API</li> <li>refs</li> <li>computed 与 watch</li> </ul> <h2>3.1 响应性基础 API</h2> <h3>3.1.1 reactive</h3> <p>用法如下：</p> <pre><code class="language-javascript">const obj = reactive({ count: 0 })</code></pre> <p>返回对象的响应式副本</p> <p>响应式转换是深层的</p> <p><span style="color:#fe2c24;">注意：</span><span style="color:#956fe7;"><strong>reactive</strong></span> 对传入的类型是有限制的，它要求我们必须传入的是 <span style="color:#956fe7;"><strong>一个对象或者数组类型</strong></span></p> <p>那如果我们想传入基本数据类型的时候怎么办？</p> <p>Vue3 给我们提供了另外一个 <span style="color:#9c8ec1;"><strong>API：ref</strong></span>，稍后我们会对其进行讲解</p> <h3>3.1.2 readonly</h3> <p>接受一个对象或 ref 并返回原始对象的只读代理（也就是说它依然是一个 <span style="color:#fe2c24;"><strong>proxy </strong></span><span style="color:#be191c;"><strong>？</strong></span>）</p> <p>只读代理是深层的：任何被访问的嵌套 property 也是只读的</p> <p>在实际开发中，传入 readonly 的参数有三种类型：</p> <ol> <li><span style="color:#ff9900;"><strong>普通对象</strong></span></li> <li><span style="color:#ff9900;"><strong>reactive 返回的对象</strong></span></li> <li><span style="color:#ff9900;"><strong>ref 对象</strong></span></li> </ol> <p>用法如下：</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="350" src="http://img.555519.xyz/uploads/20221230/7d4d2584a3997efea0ec6a79a1f85de2.jpg"></p> <p><span style="color:#fe2c24;">一般我们什么时候会用到 <strong>readonly</strong> 呢？</span></p> <p>我们给其它组件传递数据，希望它们使用我们传递过去的数据</p> <p>但是不允许它们修改的时候</p> <h3>3.1.3 isProxy</h3> <p>检查对象是否由 <span style="color:#ff9900;"><strong>reactive</strong></span> 或 <span style="color:#ff9900;"><strong>readonly</strong></span> 创建的 proxy</p> <h3>3.1.4 isReactive</h3> <p>检查对象是否由 <span style="color:#ff9900;"><strong>reactive </strong></span>创建的响应式代理</p> <p>用法如下：</p> <pre><code class="language-javascript">import { reactive, isReactive } from 'vue' export default {   setup() {     const state = reactive({       name: 'John'     })     console.log(isReactive(state)) // -&gt; true   } }</code></pre> <p><span style="color:#fe2c24;">注意：</span>如果该代理是 <span style="color:#ff9900;"><strong>readonly</strong></span> 创建的，但包裹了由 <span style="color:#ff9900;"><strong>reactive</strong></span> 创建的另一个代理，它也会返回 <span style="color:#faa572;"><strong>true</strong></span></p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="390" src="http://img.555519.xyz/uploads/20221230/efdabac4541fc4e1c501c7ad286ef45e.jpg"></p> <h3>3.1.5 isReadonly</h3> <p>检查对象是否由 <span style="color:#ff9900;"><strong>readonly</strong></span> 创建的只读代理</p> <h3>3.1.6 toRaw</h3> <p>返回 <span style="color:#ff9900;"><strong>reactive</strong></span> 或 <span style="color:#ff9900;"><strong>readonly</strong></span> 代理的原始对象</p> <h3>3.1.7 shallowReactive</h3> <p>创建一个响应式代理，它跟踪其自身 <span style="color:#ff9900;"><strong>property</strong></span> 的响应性，但不执行嵌套对象的深层响应式转换</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="315" src="http://img.555519.xyz/uploads/20221230/577834582b9c7ab82cfdbc1171a54b0f.jpg"></p> <h3>3.1.8 shallowReadonly</h3> <p>创建一个 <span style="color:#ff9900;"><strong>proxy</strong></span>，使其自身的 <span style="color:#ff9900;"><strong>property</strong></span> 为只读，但不执行嵌套对象的深度只读转换 (暴露原始值)</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="299" src="http://img.555519.xyz/uploads/20221230/9a596792a64a60db8898e16ba7f50bdd.jpg"></p> <h2>3.2 Refs</h2> <h3>3.2.1 ref</h3> <p>接受一个内部值并返回一个响应式且可变的 <strong>ref</strong> 对象</p> <p><strong>ref</strong> 对象具有指向内部值的单个 <strong>property</strong>&nbsp;<span style="color:#ff9900;"><strong><span style="background-color:#f3f3f4;">.value</span></strong></span></p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="177" src="http://img.555519.xyz/uploads/20221230/3ba422c124f2da8c17c1123ffd078bb6.jpg"></p> <p>这里有两个注意事项：</p> <ol> <li>在&nbsp;<span style="color:#fe2c24;">模板中引入 ref 的值&nbsp;</span>时，Vue 会自动帮我们进行&nbsp;<span style="color:#fe2c24;">解包操作</span>，所以我们&nbsp;<span style="color:#fe2c24;">不需要&nbsp;</span>在模板中通过 ref.value 的方式来使用</li> <li>在 <span style="color:#fe2c24;">setup 函数内部</span>，它任然是一个 <span style="color:#fe2c24;">ref 引用</span>，所以对其进行操作时，我们依然需要&nbsp;<span style="color:#fe2c24;">使用 ref.value 的方式</span> </li> </ol> <p><span style="color:#fe2c24;">如果将 ref 放到一个 reactive 的属性中，那么在模板中使用时会自动解包？</span></p> <hr/> <h1>4、Computed 和 watch</h1> <h2>4.1 computed</h2> <p>接受一个 getter 函数，并为从 getter 返回的值返回一个&nbsp;<span style="color:#fe2c24;">不变的&nbsp;</span>响应式 ref 对象</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="172" src="http://img.555519.xyz/uploads/20221230/ee8d647b604bd1f974dce577e1aa7ae9.jpg"></p> <p>使用具有 get 和 set 函数的对象来创建&nbsp;<span style="color:#fe2c24;">可写&nbsp;</span>的 ref 对象</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="241" src="http://img.555519.xyz/uploads/20221230/9672d581c0b12d4f1e40ee6ed48b956f.jpg"></p> <h2>4.2 watchEffect</h2> <p>在响应式地跟踪其依赖项时&nbsp;<span style="color:#fe2c24;">立即运行&nbsp;</span>一个函数，并在&nbsp;<span style="color:#fe2c24;">更改&nbsp;</span>依赖项时&nbsp;<span style="color:#fe2c24;">重新运行&nbsp;</span>它</p> <pre><code class="language-javascript">const count = ref(0)  watchEffect(() =&gt; console.log(count.value)) // -&gt; logs 0  setTimeout(() =&gt; {   count.value++   // -&gt; logs 1 }, 100)</code></pre> <h3>&nbsp;4.2.1 停止监听</h3> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="171" src="http://img.555519.xyz/uploads/20221230/8575d41290cca5195fd7bca2c72db32d.jpg"></p> <h3>4.2.2&nbsp;清除副作用</h3> <p>有时副作用函数会执行一些异步的副作用，这些响应需要在其失效时清除</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="222" src="http://img.555519.xyz/uploads/20221230/bd077cf4c845d3d828b5666910731e8b.jpg"></p> <p><span style="color:#fe2c24;">待更...</span></p> </p></div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-3011.htm">django获取url中参数</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-3013.htm">Vue+SpringBoot实现Excel在线预览功能</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3111.htm" title="vue实现拖拽窗口功能_vue.js">vue实现拖拽窗口功能_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-4115.htm" title="Mac电脑配置maven，idea配置maven">Mac电脑配置maven，idea配置maven</a></li>
                        <li class="py-2"><a href="/html/category/article-3101.htm" title="Docker基础ONBUILD指令介绍">Docker基础ONBUILD指令介绍</a></li>
                        <li class="py-2"><a href="/html/category/article-3104.htm" title="Java详细讲解不同版本的接口语法和抽象类与接口的区别_java">Java详细讲解不同版本的接口语法和抽象类与接口的区别_java</a></li>
                        <li class="py-2"><a href="/html/category/article-3444.htm" title="关于Android安装apk出现解析包异常问题情况总结">关于Android安装apk出现解析包异常问题情况总结</a></li>
                        <li class="py-2"><a href="/html/category/article-3097.htm" title="vue 动态样式绑定">vue 动态样式绑定</a></li>
                        <li class="py-2"><a href="/html/category/article-3081.htm" title="你的编程能力从什么时候开始突飞猛进? 我的回答：2013年，我开始喜欢编程了。">你的编程能力从什么时候开始突飞猛进? 我的回答：2013年，我开始喜欢编程了。</a></li>
                        <li class="py-2"><a href="/html/category/article-3119.htm" title="Cpp的异常处理Exception Handling-笔记">Cpp的异常处理Exception Handling-笔记</a></li>
                        <li class="py-2"><a href="/html/category/article-3092.htm" title="linux安装离线docker包教程,Centos7离线安装Docker">linux安装离线docker包教程,Centos7离线安装Docker</a></li>
                        <li class="py-2"><a href="/html/category/article-3110.htm" title="Vue刷新页面数据持久化">Vue刷新页面数据持久化</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>