<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://omanaddress.github.io/html/category/article-2851.htm" />
    <!-- ========== Meta Tags ========== -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    <!-- ========== Page Title ========== -->
    <title>为什么代码规范要求SQL语句不要过多的join？ - Oman Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/omanaddress/favicon.ico" type="image/x-icon"/>

    <!-- ========== Start Stylesheet ========== -->
    <link href="/assets/addons/xcblog/css/omanaddress/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/font-awesome.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/themify-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/flaticon-set.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/elegant-icons.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/magnific-popup.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.carousel.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/owl.theme.default.min.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/animate.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/bootsnav.css" rel="stylesheet" />
    <link href="/assets/addons/xcblog/css/omanaddress/style.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/omanaddress/responsive.css" rel="stylesheet" />
    <!-- ========== End Stylesheet ========== -->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/html5shiv.min.js"></script>
      <script src="/assets/addons/xcblog/js/frontend/omanaddress/html5/respond.min.js"></script>
    <![endif]-->

    <!-- ========== Google Fonts ========== -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@200;300;400;600;700;800&display=swap" rel="stylesheet">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?afd972d72a67e62884759c9ecd23c891";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- Header 
    ============================================= -->
    <header id="home">

        <!-- Start Navigation -->
        <nav class="navbar navbar-default attr-border navbar-sticky dark bootsnav">

            <div class="container-full">
                <!-- Start Header Navigation -->
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
                        <i class="fa fa-bars"></i>
                    </button>
                    <a class="navbar-brand" href="/">
                            <img src="/assets/addons/xcblog/img/omanaddress/logo-s.png" class="logo" alt="Logo">
                            Oman Address
                    </a>
                </div>
                <!-- End Header Navigation -->

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="navbar-menu">
                    <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
                                                <li>
                            <a href="/">首页</a>
                        </li>
                                                <li>
                            <a href="/html/category/">文章分类</a>
                        </li>
                                                <li>
                            <a href="#">关于</a>
                        </li>
                        <li>
                            <a href="#">联系</a>
                        </li>
                    </ul>
                </div><!-- /.navbar-collapse -->
            </div>

        </nav>
        <!-- End Navigation -->

    </header>
    <!-- End Header -->
    <!-- Start Breadcrumb 
    ============================================= -->
    <div class="breadcrumb-area bg-gray text-center shadow dark text-light bg-cover" style="background-image: url(/assets/addons/xcblog/img/omanaddress/banner/26.jpg);">
        <div class="container">
            <div class="row">
                <div class="col-lg-8 offset-lg-2">
                    <h1 style="word-break: break-all;">为什么代码规范要求SQL语句不要过多的join？</h1>
                    <ul class="breadcrumb">
                        <li><a href="/"><i class="fas fa-home"></i> 首页</a></li>
                        <li><a href="/html/category/"> 文章分类</a></li>
                        <li class="active">正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumb -->
    <!-- Start Blog
    ============================================= -->
    <div class="blog-area single full-blog full-blog default-padding">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <div class="blog-items">
                        <div class="row">
                            <div class="blog-content col-lg-10 offset-lg-1 col-md-12">
                                <div class="item">
                                    <div class="blog-item-box">
                                        <!-- Start Post Thumb -->
                                        <div class="content">
                                              				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li>送分题</li> <li>再谈SQL Join</li> <li> <ul> <li>回顾</li> <li>缓冲区</li> <li>一个大前提</li> <li>Join算法</li> <li> <ul> <li>Nested Loop Join</li> <li>Block nested loop</li> </ul> </li> </ul> </li> <li>总结</li> </ul> </li> </ul> </div> <h2>送分题</h2> <p><strong>面试官</strong>：有操作过Linux吗?</p> <p><strong>我</strong>：有的呀</p> <p><strong>面试官</strong>：我想查看内存的使用情况该用什么命令</p> <p><strong>我</strong>：<code>free</code> 或者<code>top</code></p> <p><strong>面试官</strong>：那你说一下用free命令都可以看到啥信息</p> <p><strong>我</strong>：那，如下图所示 可以看到内存以及缓存的使用情况</p> <ul> <li>total 总内存</li> <li>used 已用内存</li> <li>free 空闲内存</li> <li>buff/cache 已使用的缓存</li> <li>avaiable 可用内存</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/4afbd5ac66bfb30441bf252282007621.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>面试官</strong>：那你知道怎么清理已使用的缓存吗(buff/cache)</p> <p><strong>我</strong>：em… 不知道</p> <p><strong>面试官</strong>：<code>sync; echo 3 > /proc/sys/vm/drop_caches</code>就可以清理<code>buff/cache</code>了，你说说我在线上执行这条命令做好不好?</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/625959e5ce861164c110f0c139974868.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>我</strong>：(送分题,内心大喜)好处大大的有，清理出缓存我们就有更多可用的内存空间, 就跟pc上面xx卫士的小火箭一样，点一下，就释放出好多的内存</p> <p><strong>面试官</strong>：em…, 回去等通知吧</p> <h2>再谈SQL Join</h2> <p><strong>面试官</strong>：换个话题，谈谈你对join的理解</p> <p><strong>我</strong>： 好的（再答错就彻底完了,把握住机会)</p> <h3>回顾</h3> <p>SQL中的<code>join</code>可以根据某些条件把指定的表给结合起来并将数据返回给客户端</p> <p><code>join</code>的方式有</p> <ul> <li><code>inner join</code> 内连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/7f6e16a1a45bde53594adafd31c038ed.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <ul> <li><code>left join</code> 左连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/35527427b9a145f934f530140a9211cc.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <ul> <li><code>right join</code> 右连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/3addb984a5cd5d0b028f5f9d2f037d36.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <ul> <li><code>full join</code> 全连接</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/d6bc09023ba0a8fbb3f27b767f07ace4.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <blockquote> <p>以上图片源自这里</p> </blockquote> <p><strong>面试官</strong>：在项目开发中如果需要使用<code>join</code>语句，如何优化提升性能?</p> <p><strong>我</strong>： 分为两种情况，数据规模小的，数据规模大的。</p> <p><strong>面试官</strong>: 然后?</p> <p><strong>我</strong>：对于</p> <ul> <li><strong>数据规模较小</strong> 全部干进内存就完事了嗷</li> <li><strong>数据规模较大</strong></li> </ul> <blockquote> <p>可以通过增加索引来优化<code>join</code>语句的执行速度 可以通过冗余信息来减少<code>join</code>的次数 尽量减少表连接的次数，一个SQL语句表连接的次数不要超过5次</p> </blockquote> <p><strong>面试官</strong>：可以总结为<code>join</code>语句是相对比较耗费性能，对吗？</p> <p><strong>我</strong>：是的</p> <p><strong>面试官</strong>: 为什么?</p> <h3>缓冲区</h3> <p><strong>我</strong>: 在执行join语句的时候必然要有一个比较的过程</p> <p><strong>面试官</strong>: 是的</p> <p><strong>我</strong>：逐条比较两个表的语句是比较慢的，因此我们可以把两个表中数据依次读进一个<code>内存块</code>中, 以MySQL的InnoDB引擎为例，使用以下语句我们必然可以查到相关的内存区域<code>show variables like '%buffer%'</code></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/9a51fcc12a18eb32a1606ef86fd2d776.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>如下图所示<code>join_buffer_size</code>的大小将会影响我们<code>join</code>语句的执行性能</p> <p><strong>面试官</strong>: 除此之外呢?</p> <h3>一个大前提</h3> <p><strong>我</strong>：任何项目终究要上线，不可避免的要产生数据，数据的规模又不可能太小</p> <p><strong>面试官</strong>: 是这样的</p> <p><strong>我</strong>：大部分数据库中的数据最终要保存到<code>硬盘</code>上,并且以文件的形式进行存储。</p> <p>以MySQL的InnoDB引擎为例</p> <ul> <li>InnoDB以<code>页</code>(page)为基本的IO单位，每个页的大小为16KB</li> <li>InnoDB会为每个表创建用于存储数据的<code>.ibd</code>文件</li> </ul> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/dfc3f9f05ccb59db928f6e45c642de3e.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>验证</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/d5d1255549498deb66aad42e7c172389.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>我</strong>：这意味着我们有多少表要连接就需要读多少个文件，虽然可以利用索引，但还是免不了频繁的移动硬盘的磁头</p> <p><strong>面试官</strong>：也就是说频繁的移动磁头会影响性能对吧</p> <p><strong>我</strong>：是的，现在的开源框架不都喜欢说自己通过顺序读写大大的提升了性能吗，比如<code>hbase</code>、<code>kafka</code></p> <p><strong>面试官</strong>：说的没错，那你认为<code>Linux</code>有对此做出优化吗?提示，你可以再执行一次<code>free</code>命令看一下</p> <p><strong>我</strong>：奇怪缓存怎么占用了1.2G多</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/736c37fc5686e345356e970ff19a848d.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/bfe98e8f834fea74bf6fea1288ccd840.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <blockquote> <p>图片来源这里</p> </blockquote> <p><strong>面试官</strong>: 你有没有想过</p> <ul> <li><code>buff/cache</code> 里面存的是什么,？</li> <li>为什么<code>buff/cache</code> 占了那么多内存，可用内存即<code>availlable</code>还有<code>1.1G</code>？</li> <li>为什么你可以通过两条命令来清理<code>buff/cache</code>占用的内存，而想要释放<code>used</code>只能通过结束进程来实现?</li> </ul> <p><strong>品，你细品</strong></p> <p>思考了几分钟后</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/1ff8da4970abdf1d004440aaa35e00b8.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><strong>我</strong>：这么随便就释放了<code>buff/cache</code>所占用的内存，说明它就不重要, 清除它不会对系统的运行造成影响</p> <p><strong>面试官</strong>: 不完全对</p> <p><strong>我</strong>：难道是？想起来《CSAPP》（深入理解计算机系统）里面说过一句话</p> <blockquote> <p>存储器层次结构的本质是，每一层存储设备都是较低一层设备的缓存</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/bdcdd82180b4107fa2756dada9ef4f49.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>翻译成人话，就是说<strong>Linux会把内存当作是硬盘的高速缓存</strong></p> <blockquote> <p>相关资料tldp.org/LDP/sag/htm…</p> </blockquote> <p><strong>面试官</strong>：现在知道那道送分题应该怎么回答了吧</p> <p><strong>我</strong>：我…</p> <p></p> <h3>Join算法</h3> <p><strong>面试官</strong>：再给你个机会，如果让你来实现Join算法你会怎么做?</p> <p><strong>我</strong>：无索引的话,嵌套循环就完事了嗷。有索引的话，则可以利用索引来提升性能.</p> <p><strong>面试官</strong>：说回<code>join_buffer</code> 你认为<code>join_buffer</code>里面存储的是什么?</p> <p><strong>我</strong>：在扫描过程中，数据库会选择一个表把他<strong>要返回以及需要进行和其他表进行比较的数据</strong>放进<code>join_buffer</code></p> <p><strong>面试官</strong>：有索引的情况下是怎么处理的？</p> <p><strong>我</strong>：这个就比较简单了，直接读取两个表的索引树进行比较就完事了嗷，我这边介绍一下无索引的处理方式</p> <h4>Nested Loop Join</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/4e0ff974f865a0fc86cee872b7e4bda9.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>嵌套循环，每次只读取表中的一行数据，也就是说如果outerTable有10万行数据, innerTable有100行数据，需要读取<code>10000000</code>次(假设这两个表的文件没有被操作系统给缓存到内存, 我们称之为冷数据表)</p> <p>当然现在没啥数据库引擎使用这种算法（太慢了)</p> <h4>Block nested loop</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/8048fb64f8869d666e0c6225ae7b17be.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p><code>Block</code> 块，也就是说每次都会取一块数据到内存以减少I/O的开销</p> <p>当没有索引可以使用的时候，MySQL InnoDB 就会使用这种算法</p> <p>考虑以下两个表<code>t_a</code> 和<code>t_b</code></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/1f80bb9cce8e3ba7c69e5f5dc29de622.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <p>当无法使用索引执行join操作的时候，InnoDB会自动使用<code>Block nested loop</code> 算法</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220723/d95caabd3a895cfb08b86b94f2555d43.jpg" alt="为什么代码规范要求SQL语句不要过多的join？"></p> <h2>总结</h2> <p>上学时，数据库老师最喜欢考数据库范式，直到上班才学会一切以性能为准，能冗余就冗余，实在冗余不了的就<code>join</code>如果<code>join</code>真的影响到性能。试着调大你的<code>join_buffer_size</code>, 或者换固态硬盘。</p> </div> 			                                            <div class="col-md-12 mt-5">
                                                                                                <p>上一个：<a href="/html/category/article-2850.htm">TS和JS的一些区别</a></p>
                                                                                                <p>下一个：<a href="/html/category/article-2852.htm">我们如何获得MySQL结果集中的所有唯一行？</a></p>
                                                                                            </div>
                                                                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6634.htm" title="青岛动物医学招聘事业编（青岛兽医专业学校）">青岛动物医学招聘事业编（青岛兽医专业学校）</a></li>
                        <li class="py-2"><a href="/html/category/article-7003.htm" title="宠康动物医院地址在哪里（宠康动物医院地址在哪里呀）">宠康动物医院地址在哪里（宠康动物医院地址在哪里呀）</a></li>
                        <li class="py-2"><a href="/html/category/article-6681.htm" title="正宗的红烧肉做法视频">正宗的红烧肉做法视频</a></li>
                        <li class="py-2"><a href="/html/category/article-7830.htm" title="太原免费领养宠物 太原免费领养宠物的地方">太原免费领养宠物 太原免费领养宠物的地方</a></li>
                        <li class="py-2"><a href="/html/category/article-7831.htm" title="猫咪3针疫苗间隔多久打第二针好一点（猫的疫苗三针隔多久）">猫咪3针疫苗间隔多久打第二针好一点（猫的疫苗三针隔多久）</a></li>
                        <li class="py-2"><a href="/html/category/article-7739.htm" title="动物防疫站***免费吗今天上班（动物防疫站***免费吗今天上班吗）">动物防疫站***免费吗今天上班（动物防疫站***免费吗今天上班吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7509.htm" title="动物医院叫什么医院名称呢英文（动物医院的名字）">动物医院叫什么医院名称呢英文（动物医院的名字）</a></li>
                        <li class="py-2"><a href="/html/category/article-7554.htm" title="宠物粮原料（宠物粮种类）">宠物粮原料（宠物粮种类）</a></li>
                        <li class="py-2"><a href="/html/category/article-7324.htm" title="宠物粮加工厂原料有哪些呢 宠物粮加工厂原料有哪些呢图片">宠物粮加工厂原料有哪些呢 宠物粮加工厂原料有哪些呢图片</a></li>
                        <li class="py-2"><a href="/html/category/article-7095.htm" title="广州宠物领养中心有哪些公司 广州宠物领养中心有哪些公司招聘">广州宠物领养中心有哪些公司 广州宠物领养中心有哪些公司招聘</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
    <!-- End Blog -->
        <!-- Star Footer
    ============================================= -->
    <footer class="bg-dark text-light">
        <!-- Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6">
                        <p>
                            Oman Address 版权所有
                            <br />
                            Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-right link">
                        <ul>
                            <li>
                                <a href="#">Terms</a>
                            </li>
                            <li>
                                <a href="#">Privacy</a>
                            </li>
                            <li>
                                <a href="#">Support</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Bottom -->
    </footer>
    <!-- End Footer-->

    <!-- jQuery Frameworks
    ============================================= -->
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery-1.12.4.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/popper.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootstrap.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.appear.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.easing.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.magnific-popup.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/modernizr.custom.13711.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/owl.carousel.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/wow.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/progress-bar.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/isotope.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/count-to.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/YTPlayer.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/jquery.nice-select.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/loopcounter.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/bootsnav.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/omanaddress/main.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function() {
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>